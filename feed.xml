<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://seonghak35.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://seonghak35.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-12-01T03:14:56+00:00</updated><id>https://seonghak35.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Second-Order Non-linear Methods for Scalar Equations</title><link href="https://seonghak35.github.io/blog/2024/toro_chap4/" rel="alternate" type="text/html" title="Second-Order Non-linear Methods for Scalar Equations"/><published>2024-02-17T00:00:00+00:00</published><updated>2024-02-17T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/toro_chap4</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/toro_chap4/"><![CDATA[<p><strong>Godunov’s theorem</strong> says that there are no linear schemes for the linear advection equation of accuracy two or higher. Thus, <strong><em>for oscillation-free and high-order of accuracy, the numerical scheme have to be non-linear method.</em></strong></p> <p>Let’s consider the initial-boundary value problem (IBVP) for the inhomogeneous \((s(q)\neq0)\) and non-linear hyperbolic equation as follows:</p> \[\partial_{t}q+\partial_{x}f(q)=s(q)\] <p>where initial and boundary conditions are given by</p> \[q(x, 0)=q^{(0)}(x),\] \[q(a, t) = b_{L}(t),\] \[q(b,t)=b_{R}(t).\] <h2 id="finite-volume-framework">Finite Volume Framework</h2> <p>Entire space domain \([a,b]\) is discretized into \(M\) cells having interval \(I_i=[x_{x-1/2},x_{x+1/2}]\), which is not a point defined as finite difference framework. The control volume is established as rectangular \(V=[x_{i-1/2}, x_{i+1/2}]\times[t_{n}, t_{n+1}]\).</p> <p>Therefore, <strong><em>exact</em></strong> integration of the partial difference equation (PDE) on control volume is as follows:</p> \[\hat{q}^{n+1}_{i}=\hat{q}^{n}_{i}-\frac{\Delta t}{\Delta x}\left[\hat{f}_{i+1/2}-\hat{f}_{i-1/2}\right] + \Delta t \hat{s}_{i}\] \[\hat{q}^{n}_{i}=\frac{1}{\Delta x}\int_{x_{i-1/2}}^{x_{i+1/2}}q(x,t_n)dx,\] \[\hat{f}_{i+1/2}=\frac{1}{\Delta t}\int_{t_n}^{t_{n+1}}f\left(q(x_{i+1/2},t)\right)dt,\] \[\hat{s}_{i} =\frac{1}{\Delta t}\frac{1}{\Delta x}\int^{t_{n+1}}_{t_{n}}\int^{x_{i+1/2}}_{x_{i-1/2}}s\left(q(x,t)\right)dx dt.\] <p>Here, \(\hat{}\) means the exact value. As mentioned, these value is not defined as point value, but interval. Thus integral average is used for representative value. This equation shows the finite volume framework is one of the conservative form.</p> <p>By removing the hat \((\hat{})\), the <strong><em>approximate</em></strong> finite volume method is given by</p> \[{q}^{n+1}_{i}={q}^{n}_{i}-\frac{\Delta t}{\Delta x}\left[{f}_{i+1/2}-{f}_{i-1/2}\right] + \Delta t {s}_{i},\] <p>where the approximated, numerical flux \((f_{i+1/2})\) and approximated, numerical source \((s_i)\) have to be defined to fully determine a finite volume method. The accuracy of this numerical scheme depends crucially on the accuracy used to approximate the integrals.</p> <h2 id="reconstruction">Reconstruction</h2> <p>The integration of the value make the constant value, and thus remove some distribution of the original value in the interval. To recovering the removed information, the reconstruction can be used. The first-degree polynomial in cell \(i\) is defined as</p> \[p_i(x)=q^{n}_{i}+(x-x_i)\Delta_i,\] <p>where \(x\in[x_{i-1/2}, x_{i+1/2}]\) and \(\Delta_{i}\) is the slope. One of the simple slope is centred slope given by</p> \[\Delta_{i}=\frac{q^{n}_{i+1}-q^{n}_{i-1}}{2\Delta x}.\] <p>With this centred slope, the reconstruction becomes a linear reconstruction as it is <em>fixed</em> (same pattern) for all \(i\), making the solutions oscillatory. On the other hand, by choosing \(\Delta_i\) depending on the solution \((q)\) adaptively, the reconstruction becomes non-linear.</p> <h3 id="procedure-for-numerical-flux">Procedure for Numerical Flux</h3> <p>Boundary values of the cell \([x_{i-1/2}, x_{x+1/2}]\) are as follows:</p> \[q^{L}_{i}=p_i\left(x_{x-1/2}\right)=q^{n}_{i}-\frac{1}{2}\Delta x\Delta_i,\] \[q^{R}_{i}=p_i\left(x_{x+1/2}\right)=q^{n}_{i}+\frac{1}{2}\Delta x\Delta_i.\] <p>For time evolution, taylor expansions are applied, i.e.,</p> \[\hat{q}^{L}_{i}=q^{L}_{i}+\frac{1}{2}\Delta t\partial_t q^L_i,\] \[\hat{q}^{R}_{i}=q^{R}_{i}+\frac{1}{2}\Delta t\partial_t q^R_i.\] <p>To invert time derivative into space derivative, Cauchy-Kowalevskaya procedure is used, i.e.,</p> \[\partial_t q=-\partial_x f(q) + s(q),\] <p>where the flux derivative is approximated as</p> \[\partial_x f(q)\approx\frac{f(q^R_i)-f(q^L_i)}{\Delta x}\equiv\Delta f_i,\] <p>and the source term \(s(q)\) can be obtained by simply substitution of boundary values \(q^L_i\) and \(q^R_i\).</p> <p>Final evolved boundary values become</p> \[\hat{q}^{L}_{i}=q^{L}_{i}-\frac{1}{2}\Delta t\Delta f_i+\frac{1}{2}\Delta ts(q^L_i),\] \[\hat{q}^{R}_{i}=q^{R}_{i}-\frac{1}{2}\Delta t\Delta f_i+\frac{1}{2}\Delta ts(q^R_i).\] <p>The <strong>conventional Riemann problem</strong> can be solved for solution at the local interface \(q_{i+1/2}(0)\) with Centred flux (Riemann problem-free method) or Godunov flux (Riemann solution) using two boundary values as</p> <p>if \(x&lt;0\),</p> \[q(x,0)=h(x)=\hat{q}^R_i\] <p>else if \(x&gt;0\),</p> \[q(x,0)=h(x)=\hat{q}^L_{i+1},\] <p>It is worth noting that these two fluxes are first-order methods when without reconstruction; however, they become second-order methods with reconstruction.</p> <p>Finally, the numerical flux can be obtained by</p> \[f_{i+1/2}=\frac{1}{\Delta t}\int^{t_{n+1}}_{t_{n}}f\left(q\left(x_{i+1/2},\frac{1}{2}\Delta t\right)\right)dt =f\left(q_{i+1/2}(0)\right).\] <h4 id="centred-flux-force">Centred Flux (FORCE)</h4> <p>One of the centred flux is FORCE, which expressed by</p> \[f_{i+1/2}=\frac{1}{\Delta t}\int^{t_{n+1}}_{t_n}f^\mathrm{force}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)dt=f^\mathrm{force}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)\] \[f^\mathrm{force}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)=\frac{1}{2}\left[f^\mathrm{LF}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)+f^\mathrm{LW}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)\right]\] \[f^\mathrm{LF}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)=\frac{1}{2}\left(f\left(\hat{q}^R_i\right)+f\left(\hat{q}^L_{i+1}\right)\right)-\frac{1}{2}\frac{\Delta x}{\Delta t}\left(\hat{q}^L_{i+1}-\hat{q}^R_i\right)\] \[q^\mathrm{LW}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)=\frac{1}{2}\left(\hat{q}^R_i+\hat{q}^L_{i+1}\right)-\frac{1}{2}\frac{\Delta t}{\Delta x}\left(f\left(\hat{q}^L_{i+1}\right)-f\left(\hat{q}^R_{i}\right) \right)\] \[f^\mathrm{LW}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)=f\left(q^\mathrm{LW}_{i+1/2}\left(\hat{q}^R_i,\hat{q}^L_{i+1}\right)\right)\] <h4 id="godunov-flux-upwind-flux">Godunov Flux (Upwind Flux)</h4> <p>If the conventional Riemann problem is applied for linear advection equation, the solution and numerical flux are respectively given by</p> <p>if \(\lambda &gt; 0\),</p> \[q(x_{i+1/2}, t)=\hat{q}^R_i\] \[f_{i+1/2}=\lambda \hat{q}^R_i\] <p>else if \(\lambda &lt; 0\),</p> \[q(x_{i+1/2}, t)=\hat{q}^L_{i+1}\] \[f_{i+1/2}=\lambda \hat{q}^L_{i+1}\] <h3 id="procedure-for-numerical-source">Procedure for Numerical Source</h3> <p>To approximate the volume integral of source term, mid-point rule in space and time is applied with Taylor expansion as follows:</p> \[q\left(x_i, t_n+\frac{1}{2}\Delta t\right)=q^n_i+\frac{1}{2}\Delta t\partial_tq\left(x_i, t_n\right)\] <p>To change the time derivative into space derivative, the Cauchy Kowaleswkaya is used as</p> \[q\left(x_i,t_n+\frac{1}{2}\Delta t\right)=q^n_i-\frac{1}{2}\Delta t\Delta f_i+\frac{1}{2}\Delta ts\left(q^n_i\right)\] <p>Finally, the numerical source is</p> \[s_i=s\left[q^n_i-\frac{1}{2}\Delta t\Delta f_i+\frac{1}{2}\Delta ts\left(q^n_i\right)\right]\] <p>It is worth noting that the equation for numerical flux includes the source term and the equation for numerical source also includes the flux term. Therefore, flux and source terms make a interaction each other, so have to addressed together, not separately.</p> <h2 id="non-linear-schemes">Non-Linear schemes</h2> <h3 id="tvd-slope">TVD slope</h3> <p>With left and right polynomial slopes,</p> \[\Delta_{i-1/2}=\frac{q^n_i - q^n_{i-1}}{\Delta x}\] \[\Delta_{i+1/2}=\frac{q^n_{i+1} - q^n_{i}}{\Delta x}\] <p>The TVD slope (minmod slope) is given by</p> \[\Delta _i =\mathrm{minmod}\left(\Delta_{i-1/2},\Delta_{i+1/2}\right)\] <p>where \(\mathrm{minmod}\) function means that if signs of left and right slopes are same, the slope becomes smaller absolute value between the left and right slopes; however, if the signs are different, the value is zero.</p> <h3 id="eno-slope">ENO slope</h3> <p>The ENO means Essentially Non Oscillatory. This is the same as minmod slope except for not considering the different signs. In other words, ENO considers only smaller absolute value.</p>]]></content><author><name></name></author><category term="CFD"/><category term="numerical_method"/><summary type="html"><![CDATA[This is based on the Computational Modeling for Fluid Dynamics course, which I took at SNU during the summer semester of 2021, by Prof. E.F. Toro.]]></summary></entry><entry><title type="html">Colloidal Dispersion</title><link href="https://seonghak35.github.io/blog/2024/colloidal_dispersion/" rel="alternate" type="text/html" title="Colloidal Dispersion"/><published>2024-01-23T00:00:00+00:00</published><updated>2024-01-23T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/colloidal_dispersion</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/colloidal_dispersion/"><![CDATA[<h2 id="colloidal-dispersion">Colloidal Dispersion</h2> <p>콜로이드 분산계 (colloidal dispersion)는 \(10\mu m\) 이하의 크기를 갖는 고체 입자들이 서로 응집되지 않고 안정한 혼합액을 이뤄 액체 속에 퍼져있는 분산액을 말한다. colloid를 구성하는 고체 미립자는 dispersed phase에 해당하며, 고체 미립자가 분산되어 있는 액체는 dispersion medium이라 한다. 거시적으로 colloidal dispersion은 single phase로 인식되지만, 미시적으로는 multiphase로써 Brownian motion이나 Tyndall effect 와 같은 특성을 나타낸다.</p> <ul> <li>Brownian motion: dispersion medium를 구성하는 분자들이 열운동에 의해 입자와 충돌하여 발생하는 colloid 입자의 불규칙한 운동</li> <li>Tyndall effect: dispersion medium에 분산된 colloid에 의한 빛의 산란으로 인해 발생</li> </ul> <p>liquid-liquid 또는 solid-liquid interface를 포함하는 경우에는 수력학적 상호작용력 이외에 colloid 힘을 유발시키며, interface와 입자간의 거리가 매우 짧을 경우에는 수력학적 상호작용력보다 electrostatic force나 분자 수준의 상호작용에 의한 van der Waals force가 매우 커지게 된다. 이러한 Colloid 힘은 유체의 미세구조 형성과 안정성에 많은 영향을 주기 때문에 미세구조 유체의 거동을 해석하기 위해 필수적으로 이해해야한다.</p> <h2 id="electric-double-layer-edl">Electric Double Layer (EDL)</h2> <h3 id="surface-charge">Surface Charge</h3> <p>solid wall이 electrolyte solution과 접촉하게 되면 electric charge를 갖게 되며 이는 액상의 electric charge distribution을 비균일하게 만든다. 예를 들어, solid wall가 positive charge를 띠게 된다면, 정전기력에 의해 solid wall 근방에는 negative ion들이 모이게 될것이며 positive ion들은 solid wall에 가까이 접근할 수 없을 것이다. 이에 따라, solution의 electric charge distribution이 비균일해지고, electric potential의 기울기가 발생하여 하전 입자의 거동에 영향을 주게 된다.</p> <h3 id="poisson-boltzmann-equation">Poisson-Boltzmann Equation</h3> <p>Poisson-Boltzmann equation을 통해 electric charge 및 electric potential distribution의 상관 관계를 결정할 수 있다. 이는 interface 근방을 stern layer와 diffuse layer의 double layer로 고려한다. Stern layer는 interface에 바로 접하고 있는 layer로, solid wall의 electric charge에 반대되는 ion들이 interface와 접촉하고 있으며, 강한 정전기적 인력으로 인하여 ion들이 거의 이동할 수 없다. Diffuse layer로 진입하게 되면, stern layer의 screening으로 인하여 정전기력이 약해져 ion들의 mobility가 비교적 좋아지게 되는데, 여기에서는 ion에 작용하는 힘은 ion의 확산과 관련된 thermal fluctuation과 정전기력이 된다.</p> <p>일반적으로 electric charge와 electric potential의 관계는 Maxwell equation으로 규명되지만 자기장이 존재하지 않을 때는 charge density \(\rho_e\)와 electric potential \(\psi\) 사이의 관계는 linearized Poisson equation으로 표현할 수 있다.</p> \[\nabla^2\psi = -\frac{\rho_e}{\epsilon}\] <p>여기서, \(\epsilon\)은 solution의 permittivity이며, 이는 진공상태인 경우의 permittivity \(\epsilon_0\)에 relative permittivity \(\epsilon_r\)를 곱한것이다.</p> <p>Interface를 포함하는 커다란 면으로 둘러싸인 solution 부피에서, Poisson equation에 divergence theorem을 적용하면 다음과 같이, interface에서의 electric potential 기울기와 표면 charge density \(q_s\)와의 관계를 구할 수 있다.</p> \[\epsilon\left(\nabla\psi\right)_s\cdot\vec{n}=q_s\] <p>여기서 \(\vec{n}\)는 interface에서 solution쪽으로의 수직인 단위 벡터이다.</p> <p>평형 상태에서의 확산층에서는 확산을 유도하는 힘과 대류를 일으키는 정전기력이 균형을 이룬다. 여기서 확산은 chemical potential의 기울기에 의하여 진행 (ref. Brownian motion)되기 때문에 solution에 포함되어 있는 ion 중에서 valence가 \(z_k\)인 \(k\) ion의 평형식은 다음과 같다.</p> \[-k_bT\nabla\ln{C^k}=ez^k\nabla\psi\] <p>여기서, \(C^k\)는 \(k\) ion의 농도이고, \(e\)는 전자 하나의 전하량이다. solid wall에서 먼 곳에서의 ion 농도가 bulk solution의 농도 \(C^k_\infty\)와 같고, electric potential이 \(\psi_\infty=0\)이라 하면 다음과 같이 식을 풀수 있다.</p> \[C^k=C^k_\infty\exp{\left(-\frac{F_ez^k\psi}{RT}\right)}\] <p>따라서, 확산층에서의 ion 농도는 Boltzmann distribution \((\propto\exp{\left(-\frac{e}{kT}\right)})\)을 형성한다. solution이 \(N\)종의 ion을 포함하고 있으면 확산층의 charge density \(\rho_e\)는 다음과 같다.</p> \[\rho_e=\sum^N_{k=1}F_ez^kC^k\] <p>이를 linearized Poisson equation에 대입하면, 아래와 같은 Poisson-Boltzmann equation을 얻을 수 있으며, 이를 통해 charged surface 근방의 확산층에서의 electric potential distribution을 구할 수 있다.</p> \[\epsilon\nabla^2\psi=-F_e\sum^N_{k=1}z^kC^k_\infty\exp{\left(-\frac{F_ez^k\psi}{RT}\right)}\] <p>여기에, 표면에서의 electric potential \(\psi=\psi_s\)와 bulk에서의 electrical potential \(\psi=0\)를 적용하면 electrical potential distribution을 결정할 수 있고, 위의 식들을 통해 궁극적으로 표면 charge density \(q_s\)를 구할 수 있다.</p> <h2 id="electro-osmosis">Electro-osmosis</h2> <p>전기삼투 (electro-osmosis)는 electrical charge를 띠고 있는 solid wall과 접촉하고 있는 electrolyte solution에 electrical potential difference를 걸어주면 전기적 힘에 의해 solution이 흐르게 되는 현상을 말한다. Electro-osmosis는 interface가 electrical charge를 띠고 있을 때만 발생하는 현상인데, 만약 electrical charge가 띠지 않고 있다면 positive ion과 negative ion에 작용하는 전기적 힘이 서로 상쇄되어 흐름이 발생하지 않는다. Electro-osmosis를 활용하면 solid wall에서의 표면 electrical potential또는 \(\zeta\)-potential 같은 electro-kinetic 물성을 측정할 수 있다. 여기서, \(\zeta\)-potential는 stern layer와 diffuse layer의 경계에서 측정된 electrical potential이라 한다.</p> <p>반지름이 \(a\)인 straight cylindrical 모세관속에 완전히 해리된 solution이 채워져 있고, 모세관 양끝에 설치된 전극을 통하여 electric potential difference를 걸게되면, 모세관 표면은 solution과 접해 있기 때문에 이온화하여 negative ion을 띠게 된다. 축방향 속도를 \(u\)라고 하면 steady state에서 fully developed 한 방향 흐름에서는 \(u=u(r)\)이기 때문에 연속방정식이 만족하게 된다. 또한, 전기장에 의하여 유체의 unit volume이 받는 힘은 charge density와 전기장의 세기 (i.e., electrical potential 기울기)의 곱으로 표현되기 때문에 Naiver-Stokes equation의 \(z\)-방향 성분은 다음과 같이 쓸 수 있다.</p> \[0=\frac{1}{r}\frac{\partial}{\partial r}\left(\mu r\frac{\partial u}{\partial r}\right)-\rho_e\frac{\partial}{\partial z}\left(\phi + \psi\right)\] <p>여기서 monovalent symmetric solution이기 때문에, charge density \(\rho_e\)는 다음과 같이 표현될 수 있으며,</p> \[\begin{aligned} \rho_e&amp;=\sum^N_{k=1}F_ez^kC^k \\ &amp;=F_e\left(z^+C^+ - z^-C^-\right), \end{aligned}\] <p>\(\phi\)는 외부에서 전극을 통하여 걸어준 electric potential이고 (i.e., \(\phi=\phi(z)\)), \(\psi\)는 관표면 electric charge에 의하여 형성된 EDL potential이다 (i.e., \(\psi=\psi(r)\)). 또한, solution의 viscosity \(\mu\)가 온도에 따라 변하므로, 이는 관내 위치의 함수 \(\mu=\mu(r)\)로 표현될 수 있다. 여기서, charge density \(\rho_e\)는 EDL potential \(\psi\)와 linearized Poisson equation를 만족하기 때문에 다음과 같이 표현할 수 있다.</p> \[\begin{aligned} \frac{1}{r}\frac{\partial}{\partial r}\left(\mu r\frac{\partial u}{\partial r}\right)&amp;=\rho_e\frac{\partial}{\partial z}\left(\phi + \psi\right)\\ &amp;=\epsilon\frac{1}{r}\frac{\partial}{\partial r}\left(r\frac{\partial\psi}{\partial r}\right)E^\infty \end{aligned}\] <p>여기서, \(E^\infty=\left(\partial\phi/\partial z\right)\)는 외부에서 전극을 통하여 걸어준 전기장의 세기이다. 이를 풀면 다음과 같이 전개할 수 있다.</p> \[u(r)=-\frac{\epsilon \zeta E^\infty}{\mu(r)}\left[1-\frac{\psi(r)}{\zeta}\right]\] <p>Poisson-Boltzmann equation으로부터 \(\psi\)를 구해 적용하게 되면, electro-osmosis 흐름의 속도 분포인 \(u(r)\)를 계산할 수 있다. 다만, 여기서 solution의 viscosity가 온도의 함수이기 때문에 완전한 속도 분포를 얻기 위해서는 energy equation을 풀어서 온도 분포와 이에 따른 viscosity 분포를 구해야하지만, 일반적으로 모세관은 매우 가늘어서 부피에 비하여 표면적이 매우 넓기 때문에 전기저항으로 발생한 열이 관 밖으로 쉽게 전달되므로 viscosity을 일정하다고 생각해도 타당하다. 따라서, 일정한 viscosity에 대해서 유체의 평균 속도 \(\left&lt;u\right&gt;\)는 다음과 같다.</p> \[\left&lt;u\right&gt;=-\frac{\epsilon \zeta E^\infty}{\mu}\left[1-\frac{2}{\zeta a^2}\int_0^a\psi r dr \right]\] <h2 id="electrophoresis">Electrophoresis</h2> <p>전기영동 (electrophoresis)는 electric charge를 갖고 있는 입자가 전기장에 의하여 이동하는 화학현상이다.</p> <h3 id="electric-field-disturbances">Electric Field Disturbances</h3> <p>Electrophoresis에서는 외부에서 전기장을 걸어주기 때문에 입자는 힘을 받게 된다. 전기장에서 입자가 받는 힘을 구하기 위해서는 입자에 의해 교란된 전기장을 결정해야 한다. 전하 밀도가 균일하여 순 전하농도가 \(\rho_e=0\)인 유체 속에 존재하는 입자를 고려할때, 유체와 입자 내부의 electrical potential \(\phi, \tilde{\phi}\)는 모두 Laplace equation에 의해 다음과 같다.</p> \[\nabla^2\phi = 0, \quad \nabla^2\tilde{\phi}=0\] <p>입자가 균일한 미교란 전기장 \(E^{\infty}_i\)에 놓여 있다고 하면, 무한히 먼 곳에서의 electrical potential은 다음의 조건을 만족한다.</p> \[\phi=-E^\infty_i x_i,\quad\text{for}\quad r\rightarrow\infty\] <p>또한, 입자 표면 \(\partial D\)에서는 electrical potential과 current가 연속이기 때문에 다음의 조건을 만족한다.</p> \[\phi = \tilde{\psi}\] \[\chi n_i \frac{\partial \phi}{\partial x_i}=\tilde{\chi}n_i\frac{\partial\tilde{\phi}}{\partial x_i}\] <p>여기서, \(\chi, \tilde{\chi}\)는 유체와 입자의 전기 전도도로서 전기 저항의 역수이다. 위의 식들을 풀게 되면 임의의 모양을 가진 입자에 입자에 의하여 교란되는 electric potential를 계산할 수 있으며, 이 때 표면에 형성되는 표면 charge density \(q_s\)는 다음과 같다.</p> \[\epsilon n_i \frac{\partial \phi}{\partial x_i}-\tilde{\epsilon} n_i \frac{\partial\tilde{\phi}}{\partial x_i}=-q_s\] <h3 id="electrophoresis-velocity">Electrophoresis Velocity</h3> <p>반경이 \(a\)인 구가 외부에서 걸어준 전기장에 의하여 이동할 때 전기장에 의하여 받는 힘과 구의 electrophoresis velocity를 구하는 방법은 다음과 같다. 구 근방에는 외부 전기장에 의하여 유도되는 electric potential \(\phi\)외에 표면 electrical charge에 의하여 존재하는 EDL potential \(\psi\)이 존재하기 때문에 구 근방에 형성되는 electrical potential distribution은 \(\phi + \psi\)가 된다. charge density \(\rho_e\)인 유체의 운동은 연속방정식과 비균일 Stokes equation을 만족하기 때문에 다음과 같다.</p> \[\nabla P=\mu\nabla^2\vec{u}+\vec{f}\] <p>여기서, \(\vec{f}=-\rho_e\nabla\left(\phi+\psi\right)\)이며, 전기장 속에 분포하는 전하에 의한 유체의 교란은 유체 속에 점힘 \(\vec{f}\)이 분포하고 있을 때 유체가 점힘들에 의하여 교란되는 것과 동일함을 의미한다. Stokes 흐름의 일반해를 활용하면 임의의 점 \({\xi}\)에서의 속도는 다음과 같다.</p> \[u_i=\frac{1}{8\pi \mu}\int_D\left[\frac{\delta_{ij}}{R}+\frac{(\xi_i-x_i)(\xi_j-x_j)}{R^3}\right]f_idV\] <p>여기서 \(R=\vert \vec{\xi}-\vec{x} \vert\)를 의미하며, \(\vec{x}\)는 점힘의 위치벡터이고, 적분은 점힘이 분포하고 있는 공간 전체에 대한 것이다. 이를 통해, 구의 중심에서의 미교란 속도 \((u_i)_0\)와 \((\nabla^2u_i)_0\)는 다음과 같다.</p> \[(u_i)_0=\frac{1}{8\pi \mu}\int_D\left[\frac{\delta_{ij}}{r}+\frac{x_ix_j}{r^3}\right]f_jdV\] \[(\nabla^2u_i)_0=-\frac{1}{4\pi \mu}\int_D\left[-\frac{\delta_{ij}}{r^3}+\frac{3x_ix_j}{r^5}\right]f_jdV\] <p>따라서, 구에 작용하는 힘은 다음과 같다.</p> \[F_i=6\pi\epsilon\zeta E^\infty_ia\left[1-5a^5\int^\infty _a\frac{\psi/\zeta}{r^6}dr + 2a^3\int_a^\infty\frac{\psi/\zeta}{r^4}dr\right]\] <p>여기서, EDL potential \(\psi\) distribution을 이용하면 구에 작용하는 힘을 구할 수 있다. 계산의 편의성을 위해 매우 낮은 electrical potential의 경우, 아래와 같은 Debye-Huckel 가정을 적용하면,</p> \[\tilde{\zeta}=\frac{F_ez\zeta}{RT}\ll1\] <p>\(\psi\)는 다음과 같이 구할 수 있다.</p> \[\psi=\frac{\zeta a}{r}\exp{\left[-\frac{(r-a)}{\lambda_D}\right]}\] <p>여기서, \(\lambda_D\)는 Debye length라고 하며, EDL의 두께에 대한 특성길이로, 아래와 같이 정의된다.</p> \[\lambda_D\equiv\sqrt\frac{\epsilon RT}{2F^2_ez^2C_\infty}\] <p>위의 \(\psi\)를 통해, 구에 작용하는 힘을 결정할 수 있으며, 여기에 Stokes law를 적용하여 전기장 \(E_i\)속에서 구가 이동하는 속도인 electrophoresis velocity를 구하면 다음과 같다.</p> \[\begin{aligned} U_i=\frac{2}{3}\frac{\epsilon\zeta E^\infty _i}{\mu}\left[1+\frac{1}{16\chi^2}-\frac{5}{48\chi^3}-\frac{1}{96\chi^4}+\frac{1}{96\chi^5}-\frac{e^{-\chi}}{8\chi^4}\left(1-\frac{1}{12\chi^2}\right)\int^\infty _{1/\chi}\frac{e^{-s}}{s}ds\right] \end{aligned}\]]]></content><author><name></name></author><category term="CFD"/><category term="microfluidics"/><summary type="html"><![CDATA[Colloidal Dispersion 콜로이드 분산계 (colloidal dispersion)는 \(10\mu m\) 이하의 크기를 갖는 고체 입자들이 서로 응집되지 않고 안정한 혼합액을 이뤄 액체 속에 퍼져있는 분산액을 말한다. colloid를 구성하는 고체 미립자는 dispersed phase에 해당하며, 고체 미립자가 분산되어 있는 액체는 dispersion medium이라 한다. 거시적으로 colloidal dispersion은 single phase로 인식되지만, 미시적으로는 multiphase로써 Brownian motion이나 Tyndall effect 와 같은 특성을 나타낸다. Brownian motion: dispersion medium를 구성하는 분자들이 열운동에 의해 입자와 충돌하여 발생하는 colloid 입자의 불규칙한 운동 Tyndall effect: dispersion medium에 분산된 colloid에 의한 빛의 산란으로 인해 발생 liquid-liquid 또는 solid-liquid interface를 포함하는 경우에는 수력학적 상호작용력 이외에 colloid 힘을 유발시키며, interface와 입자간의 거리가 매우 짧을 경우에는 수력학적 상호작용력보다 electrostatic force나 분자 수준의 상호작용에 의한 van der Waals force가 매우 커지게 된다. 이러한 Colloid 힘은 유체의 미세구조 형성과 안정성에 많은 영향을 주기 때문에 미세구조 유체의 거동을 해석하기 위해 필수적으로 이해해야한다. Electric Double Layer (EDL) Surface Charge solid wall이 electrolyte solution과 접촉하게 되면 electric charge를 갖게 되며 이는 액상의 electric charge distribution을 비균일하게 만든다. 예를 들어, solid wall가 positive charge를 띠게 된다면, 정전기력에 의해 solid wall 근방에는 negative ion들이 모이게 될것이며 positive ion들은 solid wall에 가까이 접근할 수 없을 것이다. 이에 따라, solution의 electric charge distribution이 비균일해지고, electric potential의 기울기가 발생하여 하전 입자의 거동에 영향을 주게 된다. Poisson-Boltzmann Equation Poisson-Boltzmann equation을 통해 electric charge 및 electric potential distribution의 상관 관계를 결정할 수 있다. 이는 interface 근방을 stern layer와 diffuse layer의 double layer로 고려한다. Stern layer는 interface에 바로 접하고 있는 layer로, solid wall의 electric charge에 반대되는 ion들이 interface와 접촉하고 있으며, 강한 정전기적 인력으로 인하여 ion들이 거의 이동할 수 없다. Diffuse layer로 진입하게 되면, stern layer의 screening으로 인하여 정전기력이 약해져 ion들의 mobility가 비교적 좋아지게 되는데, 여기에서는 ion에 작용하는 힘은 ion의 확산과 관련된 thermal fluctuation과 정전기력이 된다. 일반적으로 electric charge와 electric potential의 관계는 Maxwell equation으로 규명되지만 자기장이 존재하지 않을 때는 charge density \(\rho_e\)와 electric potential \(\psi\) 사이의 관계는 linearized Poisson equation으로 표현할 수 있다. \[\nabla^2\psi = -\frac{\rho_e}{\epsilon}\] 여기서, \(\epsilon\)은 solution의 permittivity이며, 이는 진공상태인 경우의 permittivity \(\epsilon_0\)에 relative permittivity \(\epsilon_r\)를 곱한것이다. Interface를 포함하는 커다란 면으로 둘러싸인 solution 부피에서, Poisson equation에 divergence theorem을 적용하면 다음과 같이, interface에서의 electric potential 기울기와 표면 charge density \(q_s\)와의 관계를 구할 수 있다. \[\epsilon\left(\nabla\psi\right)_s\cdot\vec{n}=q_s\] 여기서 \(\vec{n}\)는 interface에서 solution쪽으로의 수직인 단위 벡터이다. 평형 상태에서의 확산층에서는 확산을 유도하는 힘과 대류를 일으키는 정전기력이 균형을 이룬다. 여기서 확산은 chemical potential의 기울기에 의하여 진행 (ref. Brownian motion)되기 때문에 solution에 포함되어 있는 ion 중에서 valence가 \(z_k\)인 \(k\) ion의 평형식은 다음과 같다. \[-k_bT\nabla\ln{C^k}=ez^k\nabla\psi\] 여기서, \(C^k\)는 \(k\) ion의 농도이고, \(e\)는 전자 하나의 전하량이다. solid wall에서 먼 곳에서의 ion 농도가 bulk solution의 농도 \(C^k_\infty\)와 같고, electric potential이 \(\psi_\infty=0\)이라 하면 다음과 같이 식을 풀수 있다. \[C^k=C^k_\infty\exp{\left(-\frac{F_ez^k\psi}{RT}\right)}\] 따라서, 확산층에서의 ion 농도는 Boltzmann distribution \((\propto\exp{\left(-\frac{e}{kT}\right)})\)을 형성한다. solution이 \(N\)종의 ion을 포함하고 있으면 확산층의 charge density \(\rho_e\)는 다음과 같다. \[\rho_e=\sum^N_{k=1}F_ez^kC^k\] 이를 linearized Poisson equation에 대입하면, 아래와 같은 Poisson-Boltzmann equation을 얻을 수 있으며, 이를 통해 charged surface 근방의 확산층에서의 electric potential distribution을 구할 수 있다. \[\epsilon\nabla^2\psi=-F_e\sum^N_{k=1}z^kC^k_\infty\exp{\left(-\frac{F_ez^k\psi}{RT}\right)}\] 여기에, 표면에서의 electric potential \(\psi=\psi_s\)와 bulk에서의 electrical potential \(\psi=0\)를 적용하면 electrical potential distribution을 결정할 수 있고, 위의 식들을 통해 궁극적으로 표면 charge density \(q_s\)를 구할 수 있다. Electro-osmosis 전기삼투 (electro-osmosis)는 electrical charge를 띠고 있는 solid wall과 접촉하고 있는 electrolyte solution에 electrical potential difference를 걸어주면 전기적 힘에 의해 solution이 흐르게 되는 현상을 말한다. Electro-osmosis는 interface가 electrical charge를 띠고 있을 때만 발생하는 현상인데, 만약 electrical charge가 띠지 않고 있다면 positive ion과 negative ion에 작용하는 전기적 힘이 서로 상쇄되어 흐름이 발생하지 않는다. Electro-osmosis를 활용하면 solid wall에서의 표면 electrical potential또는 \(\zeta\)-potential 같은 electro-kinetic 물성을 측정할 수 있다. 여기서, \(\zeta\)-potential는 stern layer와 diffuse layer의 경계에서 측정된 electrical potential이라 한다. 반지름이 \(a\)인 straight cylindrical 모세관속에 완전히 해리된 solution이 채워져 있고, 모세관 양끝에 설치된 전극을 통하여 electric potential difference를 걸게되면, 모세관 표면은 solution과 접해 있기 때문에 이온화하여 negative ion을 띠게 된다. 축방향 속도를 \(u\)라고 하면 steady state에서 fully developed 한 방향 흐름에서는 \(u=u(r)\)이기 때문에 연속방정식이 만족하게 된다. 또한, 전기장에 의하여 유체의 unit volume이 받는 힘은 charge density와 전기장의 세기 (i.e., electrical potential 기울기)의 곱으로 표현되기 때문에 Naiver-Stokes equation의 \(z\)-방향 성분은 다음과 같이 쓸 수 있다. \[0=\frac{1}{r}\frac{\partial}{\partial r}\left(\mu r\frac{\partial u}{\partial r}\right)-\rho_e\frac{\partial}{\partial z}\left(\phi + \psi\right)\] 여기서 monovalent symmetric solution이기 때문에, charge density \(\rho_e\)는 다음과 같이 표현될 수 있으며, \[\begin{aligned} \rho_e&amp;=\sum^N_{k=1}F_ez^kC^k \\ &amp;=F_e\left(z^+C^+ - z^-C^-\right), \end{aligned}\] \(\phi\)는 외부에서 전극을 통하여 걸어준 electric potential이고 (i.e., \(\phi=\phi(z)\)), \(\psi\)는 관표면 electric charge에 의하여 형성된 EDL potential이다 (i.e., \(\psi=\psi(r)\)). 또한, solution의 viscosity \(\mu\)가 온도에 따라 변하므로, 이는 관내 위치의 함수 \(\mu=\mu(r)\)로 표현될 수 있다. 여기서, charge density \(\rho_e\)는 EDL potential \(\psi\)와 linearized Poisson equation를 만족하기 때문에 다음과 같이 표현할 수 있다. \[\begin{aligned} \frac{1}{r}\frac{\partial}{\partial r}\left(\mu r\frac{\partial u}{\partial r}\right)&amp;=\rho_e\frac{\partial}{\partial z}\left(\phi + \psi\right)\\ &amp;=\epsilon\frac{1}{r}\frac{\partial}{\partial r}\left(r\frac{\partial\psi}{\partial r}\right)E^\infty \end{aligned}\] 여기서, \(E^\infty=\left(\partial\phi/\partial z\right)\)는 외부에서 전극을 통하여 걸어준 전기장의 세기이다. 이를 풀면 다음과 같이 전개할 수 있다. \[u(r)=-\frac{\epsilon \zeta E^\infty}{\mu(r)}\left[1-\frac{\psi(r)}{\zeta}\right]\] Poisson-Boltzmann equation으로부터 \(\psi\)를 구해 적용하게 되면, electro-osmosis 흐름의 속도 분포인 \(u(r)\)를 계산할 수 있다. 다만, 여기서 solution의 viscosity가 온도의 함수이기 때문에 완전한 속도 분포를 얻기 위해서는 energy equation을 풀어서 온도 분포와 이에 따른 viscosity 분포를 구해야하지만, 일반적으로 모세관은 매우 가늘어서 부피에 비하여 표면적이 매우 넓기 때문에 전기저항으로 발생한 열이 관 밖으로 쉽게 전달되므로 viscosity을 일정하다고 생각해도 타당하다. 따라서, 일정한 viscosity에 대해서 유체의 평균 속도 \(\left&lt;u\right&gt;\)는 다음과 같다. \[\left&lt;u\right&gt;=-\frac{\epsilon \zeta E^\infty}{\mu}\left[1-\frac{2}{\zeta a^2}\int_0^a\psi r dr \right]\] Electrophoresis 전기영동 (electrophoresis)는 electric charge를 갖고 있는 입자가 전기장에 의하여 이동하는 화학현상이다. Electric Field Disturbances Electrophoresis에서는 외부에서 전기장을 걸어주기 때문에 입자는 힘을 받게 된다. 전기장에서 입자가 받는 힘을 구하기 위해서는 입자에 의해 교란된 전기장을 결정해야 한다. 전하 밀도가 균일하여 순 전하농도가 \(\rho_e=0\)인 유체 속에 존재하는 입자를 고려할때, 유체와 입자 내부의 electrical potential \(\phi, \tilde{\phi}\)는 모두 Laplace equation에 의해 다음과 같다. \[\nabla^2\phi = 0, \quad \nabla^2\tilde{\phi}=0\] 입자가 균일한 미교란 전기장 \(E^{\infty}_i\)에 놓여 있다고 하면, 무한히 먼 곳에서의 electrical potential은 다음의 조건을 만족한다. \[\phi=-E^\infty_i x_i,\quad\text{for}\quad r\rightarrow\infty\] 또한, 입자 표면 \(\partial D\)에서는 electrical potential과 current가 연속이기 때문에 다음의 조건을 만족한다. \[\phi = \tilde{\psi}\] \[\chi n_i \frac{\partial \phi}{\partial x_i}=\tilde{\chi}n_i\frac{\partial\tilde{\phi}}{\partial x_i}\] 여기서, \(\chi, \tilde{\chi}\)는 유체와 입자의 전기 전도도로서 전기 저항의 역수이다. 위의 식들을 풀게 되면 임의의 모양을 가진 입자에 입자에 의하여 교란되는 electric potential를 계산할 수 있으며, 이 때 표면에 형성되는 표면 charge density \(q_s\)는 다음과 같다. \[\epsilon n_i \frac{\partial \phi}{\partial x_i}-\tilde{\epsilon} n_i \frac{\partial\tilde{\phi}}{\partial x_i}=-q_s\] Electrophoresis Velocity 반경이 \(a\)인 구가 외부에서 걸어준 전기장에 의하여 이동할 때 전기장에 의하여 받는 힘과 구의 electrophoresis velocity를 구하는 방법은 다음과 같다. 구 근방에는 외부 전기장에 의하여 유도되는 electric potential \(\phi\)외에 표면 electrical charge에 의하여 존재하는 EDL potential \(\psi\)이 존재하기 때문에 구 근방에 형성되는 electrical potential distribution은 \(\phi + \psi\)가 된다. charge density \(\rho_e\)인 유체의 운동은 연속방정식과 비균일 Stokes equation을 만족하기 때문에 다음과 같다. \[\nabla P=\mu\nabla^2\vec{u}+\vec{f}\] 여기서, \(\vec{f}=-\rho_e\nabla\left(\phi+\psi\right)\)이며, 전기장 속에 분포하는 전하에 의한 유체의 교란은 유체 속에 점힘 \(\vec{f}\)이 분포하고 있을 때 유체가 점힘들에 의하여 교란되는 것과 동일함을 의미한다. Stokes 흐름의 일반해를 활용하면 임의의 점 \({\xi}\)에서의 속도는 다음과 같다. \[u_i=\frac{1}{8\pi \mu}\int_D\left[\frac{\delta_{ij}}{R}+\frac{(\xi_i-x_i)(\xi_j-x_j)}{R^3}\right]f_idV\] 여기서 \(R=\vert \vec{\xi}-\vec{x} \vert\)를 의미하며, \(\vec{x}\)는 점힘의 위치벡터이고, 적분은 점힘이 분포하고 있는 공간 전체에 대한 것이다. 이를 통해, 구의 중심에서의 미교란 속도 \((u_i)_0\)와 \((\nabla^2u_i)_0\)는 다음과 같다. \[(u_i)_0=\frac{1}{8\pi \mu}\int_D\left[\frac{\delta_{ij}}{r}+\frac{x_ix_j}{r^3}\right]f_jdV\] \[(\nabla^2u_i)_0=-\frac{1}{4\pi \mu}\int_D\left[-\frac{\delta_{ij}}{r^3}+\frac{3x_ix_j}{r^5}\right]f_jdV\] 따라서, 구에 작용하는 힘은 다음과 같다. \[F_i=6\pi\epsilon\zeta E^\infty_ia\left[1-5a^5\int^\infty _a\frac{\psi/\zeta}{r^6}dr + 2a^3\int_a^\infty\frac{\psi/\zeta}{r^4}dr\right]\] 여기서, EDL potential \(\psi\) distribution을 이용하면 구에 작용하는 힘을 구할 수 있다. 계산의 편의성을 위해 매우 낮은 electrical potential의 경우, 아래와 같은 Debye-Huckel 가정을 적용하면, \[\tilde{\zeta}=\frac{F_ez\zeta}{RT}\ll1\] \(\psi\)는 다음과 같이 구할 수 있다. \[\psi=\frac{\zeta a}{r}\exp{\left[-\frac{(r-a)}{\lambda_D}\right]}\] 여기서, \(\lambda_D\)는 Debye length라고 하며, EDL의 두께에 대한 특성길이로, 아래와 같이 정의된다. \[\lambda_D\equiv\sqrt\frac{\epsilon RT}{2F^2_ez^2C_\infty}\] 위의 \(\psi\)를 통해, 구에 작용하는 힘을 결정할 수 있으며, 여기에 Stokes law를 적용하여 전기장 \(E_i\)속에서 구가 이동하는 속도인 electrophoresis velocity를 구하면 다음과 같다. \[\begin{aligned} U_i=\frac{2}{3}\frac{\epsilon\zeta E^\infty _i}{\mu}\left[1+\frac{1}{16\chi^2}-\frac{5}{48\chi^3}-\frac{1}{96\chi^4}+\frac{1}{96\chi^5}-\frac{e^{-\chi}}{8\chi^4}\left(1-\frac{1}{12\chi^2}\right)\int^\infty _{1/\chi}\frac{e^{-s}}{s}ds\right] \end{aligned}\]]]></summary></entry><entry><title type="html">Theoretical Notitions on Numerical Methods for Hyperbolic Equations</title><link href="https://seonghak35.github.io/blog/2024/toro_chap3/" rel="alternate" type="text/html" title="Theoretical Notitions on Numerical Methods for Hyperbolic Equations"/><published>2024-01-22T00:00:00+00:00</published><updated>2024-01-22T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/toro_chap3</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/toro_chap3/"><![CDATA[<h2 id="basic-notion">Basic Notion</h2> <h3 id="general-form">General Form</h3> <p>In the previous <a href="https://seonghak35.github.io/blog/2024/toro_chap2/">post</a>, I studied various numerical methods to solve the partial difference equation. These finite difference methods can be written in the general from as follows:</p> \[q_i^{n+1}=H\left(q^n_{i-l},q^n_{i-l+1},...,q^n_{i},...,q^n_{i+r}\right),\] <p>where \(H\) is a real-valued function of \(l+r+1\) real variables and depend on the specific numerical method. For example, Godunov’s method is expressed in the general form as follows:</p> <p>For \(\lambda&gt;0\),</p> \[H=cq^n_{n-1}+\left(1-c\right)q^n_{i},\] <p>For \(\lambda&lt;0\),</p> \[H=\left(1+c\right)q^n_{n}-cq^n_{i+1}.\] <h3 id="monotone-scheme">Monotone Scheme</h3> <p>The scheme is monotone (i.e., oscillation-free), if satisfying</p> \[\frac{\partial}{\partial q^n_k}H\left(q^n_{i-l},q^n_{i-l+1},...,q^n_{i},...,q^n_{i+r}\right)\ge 0,\] <p>which can apply to non-linear as well as linear scheme. This means the derivatives with respect to all arguments \(\left(i-l\le k \le i+r\right)\) have to be non-negative.</p> <h3 id="linear-scheme">Linear Scheme</h3> <p>Linear schemes are defined as the special class of general form for the linear advection equation as follows:</p> \[q_i^{n+1}=\sum^{k=r}_{k=-l}b_kq^n_{i+k}\] <p>where the coefficients \(b_k\) are constant (i.e., independent on the solution \(q\)).</p> <p>It is noted that <strong>linear scheme is monotone if and only if all its coefficients are non-negative</strong>.</p> <h3 id="godunovs-theorem">Godunov’s Theorem</h3> <p>There are no monotone, linear schemes for the linear advection equation with constant \(\lambda\), of accuracy two or higher. In other words, linear monotone schemes are at most first-order accurate, thus necessary condition for a numerical scheme to be oscillation-free and of high-order of accuracy is to be non-linear \((b_k=b_k(q))\). In other words, <strong>the scheme must be non-linear, even when applied to linear equations.</strong></p> <h3 id="linfty-stability">\(L^\infty\)-Stability</h3> <p>Scheme is \(L^\infty\)-stability, if for all given mesh point \(i\) satisfying</p> \[C_m \le q^n_i \le C_M\] <p>the solution for all mesh point (\(i\)) satisfies</p> \[C_m \le q^{n+1}_{i} \le C_M\] <p>This means that if the initial data is bounded below and above by constants \(C_m\) and \(C_M\) respectively, then the solution at the nex time level is also bounded below and above by the same constants \(C_m\) and \(C_M\).</p> <h2 id="local-truncation-error-lte">Local Truncation Error (LTE)</h2> <p>The general form is associated numerical operator as follows:</p> \[L_a\left(q^n_i\right)=q_i^{n+1}-H\left(q^n_{i-l},q^n_{i-l+1},...,q^n_{i},...,q^n_{i+r}\right)=0\] <p>where \(a\) means the ‘approximate’ and \(q^n_i\) is the approximated value. This numerical operator is different from the differential operator given by</p> \[L_e\left(q\right)=\partial_t q+ \lambda\partial_x q=0\] <p>where \(e\) denotes the ‘exact’ and \(q\) is the exact value.</p> <p>To evaluate error of the numerical operator, the local truncation error (LTE) is defined as</p> \[\tau^n_i=\frac{1}{\Delta t}L_a\left(q\left(x_i,t_n\right)\right)\] <p>where \(\Delta t\) has a role of scaling factor. It is noted that because the numerical operator \(L_a\) is applied to the exact solution \(q\) evaluated at the mesh point \((x_i,t_n)\), the result is no longer zero.</p> <p>To calculate the local truncation error, following steps are performed.</p> <ul> <li>First of all, it assume that the solution \(q(x,t)\) of the PDE is sufficiently smooth (for use of Taylor expansions).</li> <li>Taylor expansions in space and time about the point \((x_i, t_n)\) give</li> </ul> \[\begin{aligned} \tau^n_i&amp;=\partial_tq\left(i\Delta x,n\Delta t\right)+\lambda \partial_x q\left(i\Delta x,n\Delta t\right) \\ &amp;+O(\Delta t^k) + O(\Delta x^m) \end{aligned}\] <p>where \(k\) and \(m\) are positive integers. The first line is identically same as differential operator, therefore, remaining terms are given by</p> \[\tau^n_i=O(\Delta t^k) + O(\Delta x^m)\] <p>where the right terms denotes the leading term of \(\tau^n_i\).</p> <h3 id="order-of-accuracy">Order of Accuracy</h3> <p>From this expression, the numerical scheme has order of accuracy \(k\) in time and \(m\) in space. When the fixed relationship between \(\Delta x\) and \(\Delta t\) is considered, the order of accuracy is defined as</p> \[p=\min\{k,m\}\] <h3 id="consistency">Consistency</h3> <p>If \(\tau_i^n \rightarrow0\) as \(\Delta x \rightarrow0\) (or \(\Delta t \rightarrow0\)), the numerical scheme is said to be consistent with the partial differential equation.</p> <h3 id="example-godunov-scheme">Example: Godunov Scheme</h3> <p>To understand the calculation procedure of local truncation error, the Godunov scheme (in case of \(\lambda &lt;0\)) is given by</p> \[H=\left(1+c\right)q^n_{n}-cq^n_{i+1}\] <p>Therefore, numerical operator and local truncation error can be expressed by</p> \[\begin{aligned} L_a\left(q_i^{n}\right)&amp;=q_i^{n+1}-H\\ &amp;=q_i^{n+1}-\left(1+c\right)q^n_{n}+cq^n_{i+1}=0 \end{aligned}\] \[\begin{aligned} \tau^n_i &amp;= \frac{1}{\Delta t}L_a\left(q\left(x_i,t_n\right)\right) \\ &amp;= \frac{1}{\Delta t}\left[q\left(i\Delta x, (n+1)\Delta t\right)-(1+c)q\left(i\Delta x, \Delta t\right) + cq\left((i+1)\Delta x, n\Delta t\right)\right] \end{aligned}\] <p>by Taylor expansions at the point \(\left(x_i, t_n\right)\),</p> \[\begin{aligned} q\left(i\Delta x, (n+1)\Delta t\right) &amp;= q\left(i\Delta x, n\Delta t\right) + \Delta t\partial_t q\left(i\Delta x, n\Delta t\right) \\ &amp;+ \frac{1}{2}\Delta t^2\partial_t^2q\left(i\Delta x, n\Delta t\right) + O(\Delta t^3), \end{aligned}\] \[\begin{aligned} q\left((i+1)\Delta x, \Delta t\right) &amp;= q\left(i\Delta x, n\Delta t\right) + \Delta x\partial_x q\left(i\Delta x, n\Delta t\right) \\ &amp;+ \frac{1}{2}\Delta x^2\partial_x^2q\left(i\Delta x, n\Delta t\right) + O(\Delta x^3), \end{aligned}\] <p>Finally, the local truncation error is given by</p> \[\begin{aligned} \tau^n_i&amp;=\frac{1}{\Delta t}[q\left(i\Delta x, n\Delta t\right) + \Delta t\partial_t q\left(i\Delta x, n\Delta t\right) \\ &amp;+ \frac{1}{2}\Delta t^2\partial_t^2q\left(i\Delta x, n\Delta t\right) + O(\Delta t^3) \\ &amp;- (1+c)q\left(i\Delta x, n\Delta t\right) \\ &amp; +c \{ q\left(i\Delta x, n\Delta t\right) + \Delta x\partial_x q\left(i\Delta x, n\Delta t\right) \\ &amp; + \frac{1}{2}\Delta x^2\partial_x^2q\left(i\Delta x, n\Delta t\right) + O(\Delta x^3) \}] \\ \\ &amp;= \partial_t q(i\Delta x, n\Delta t)+\lambda\partial_x q(i\Delta x, n\Delta t) \\ &amp;+ \frac{1}{2}\Delta t \partial_t^2q(i\Delta x, n\Delta t)+\frac{1}{2} \lambda \Delta x \partial_x^2q(i\Delta x, n\Delta t) \\ &amp;+ O(\Delta t^2) + O(\Delta x^2) \end{aligned}\] <p>Because the first term is exact differential equation, this term goes to zero. Then, the leading term of the local truncation error is given by</p> \[\tau^n_i=\frac{1}{2}\Delta t \partial_t^2q(i\Delta x, n\Delta t)+\frac{1}{2} \lambda \Delta x \partial_x^2q(i\Delta x, n\Delta t)=O(\Delta t) + O(\delta x)\] <p>Therefore, the Godunov scheme is the <em>first-order accurate</em> in space in time. Moreover, this equation shows that the local truncation error depend on the mesh parameter \(\left(\Delta t, \Delta x\right)\) and due to the derivatives \(\left(\partial^2\right)\), the local truncation error increase at the discontinuity region.</p> <p>Using Cauchy-Kowalewskaya procedure, time derivatives can be converted to space derivatives as follows:</p> \[\tau^n_i = \frac{1}{2}\lambda\Delta x \left(1+c\right)\partial_x^2q(i\Delta x, n\Delta t)\] <p>where the term of \(\partial_x^2q\) means the diffusion term and \(\alpha = \frac{1}{2}\lambda\Delta x \left(1+c\right)\) is the diffusion coefficient, which shows that</p> <ul> <li>when \(\Delta x\) increase, the diffusion coefficient raise, so the numerical diffusion become severe.</li> <li>due to this numerical diffusion term, the first order method cause the high diffusive solution at the discontinuity region.</li> <li>when \(c\) goes to \(-1\), the local truncation error decrease, thus the accuracy increase.</li> </ul> <h2 id="modified-equation">Modified Equation</h2> <p>In the local truncation error equation,</p> \[\begin{aligned} \tau^n_i &amp;= \partial_t q(i\Delta x, n\Delta t)+\lambda\partial_x q(i\Delta x, n\Delta t) \\ &amp;+ \frac{1}{2}\Delta t \partial_t^2q(i\Delta x, n\Delta t)+\frac{1}{2} \lambda \Delta x \partial_x^2q(i\Delta x, n\Delta t) \\ &amp;+ O(\Delta t^2) + O(\Delta x^2) \end{aligned}\] <p>Originally, the order of accuracy is first order because the \(q(x,t)\) is the solution of the original PDE (here, the first line). However, if the \(q(x,t)\) is the solution of the following PDE, more accurate solution can be obtained because the order of accuracy become second order.</p> \[\partial_t q+\lambda\partial_x q + \frac{1}{2}\left[\Delta t \partial_t^2q+\lambda \Delta x \partial_x^2q\right] = 0\] <p>This equation called the modified equation. Here, if the Cauchy-Kovalevskaya procedure is applied to the modified equation to convert the second order time derivative to a space derivative, the final form of the modified equation is given by</p> \[\partial_t q+\lambda\partial_x q =\alpha\partial_x^2q\] <p>where \(\alpha=-\frac{1}{2}\lambda\Delta x \left(1+c\right)\) called the coefficient of numerical viscosity. This equation is a second-order PDE of the advection-diffusion type (parabolic), which shows that</p> <ul> <li>due to the diffusion term (i.e., numerical viscous term), not physical viscosity, even the solutions of the inviscid equation behave as solutions of a viscous equation.</li> <li>First-order scheme have modified equation that are of the advection-diffusion type with numerical viscosity (second-order)</li> <li> <p>Second-order scheme have modified equation of the dispersion type (third-order) as follows: \(\partial_t q+\lambda\partial_x q = \gamma \partial_x^3q\) where \(\gamma\) is coefficient of numerical dispersion. this dispersion error show up in the form of phase errors. For example, Lax-Wendroff method has this modified equation, \(\partial_t q+\lambda\partial_x q = \gamma \partial_x^3q;\quad\gamma=\frac{1}{6}\lambda\Delta x^2\left(c^2-1\right).\)</p> <p>Because \(\gamma\) depend on the power of grid size, when \(\Delta x\) decrease, \(\gamma\) rapidly decrease. This means that this scheme has a high convergence speed to exact solution.</p> </li> </ul> <p>It is noted that when dealing with physically viscosity situation, both numerical and physical viscosity coexist. Depending on the grid size, numerical viscosity can have higher values than physical viscosity, so it is essential to handle these two terms carefully.</p> <h2 id="linear-stability-analysis">Linear Stability Analysis</h2> <p>The von Neumann method for linear stability analysis of a numerical scheme introduces a trial function (i.e., test function) as follows:</p> \[q^n_i = A^n\exp\left(I\theta i\right)\] <p>where \(A\) represent an amplitude, \(A^n\) means \(A\) raised to the power \(n\) (not time notation), the complex unit is denoted by \(I\equiv\sqrt{-1}\), \(\theta=P\Delta x\) is a phase angle, and \(P\) is the wave number in the \(x\)-direction.</p> <p>Representing a numerical solution with a trail function means that as the solution advances in time \((q^n, n\uparrow)\), the amplitude increases \((A^n, n\uparrow)\). Therefore, for stability, the stability condition has to be satisfied as follows:</p> \[\vert A \vert \le 1\] <h3 id="example-godunov-scheme-1">Example: Godunov Scheme</h3> <p>In case of \(\lambda &gt;0\),</p> \[q^{n+1}_i=q^n_i-c\left(q_i^n-q^n_{i-1}\right)\] <p>Using these notation,</p> \[\begin{aligned} q^{n+1}_i&amp;=A^{n+1}\exp\left(I\theta i\right) \\ q^n_i &amp;= A^{n}\exp\left(I\theta i\right)\\ q^n_{i-1} &amp;= A^{n}\exp\left(I\theta (i-1)\right), \end{aligned}\] \[A^{n+1}\exp\left(I\theta i\right)=A^{n}\exp\left(I\theta i\right) - c\left[A^{n}\exp\left(I\theta i\right)-A^{n}\exp\left(I\theta (i-1)\right)\right]\] <p>After cancelling \(A^{n}\exp\left(I\theta i\right)\) and some mathematical manipulations, the amplitude can be obtained as follows:</p> \[\Vert A\Vert^2=(1-c)^2+2c(1-c)cos\theta+c^2\] <p>Therefore, by imposing \(\Vert A\Vert^2\le 1\), the stable condition for the Godunov scheme is given by \(c\le0\le1\).</p> <h3 id="time-step">Time Step</h3> <p>Now, the time step can be obtained from stability condition. From the condition \((c=\frac{\lambda \Delta t}{\Delta x}\le1)\), the time step is given by</p> \[\begin{aligned} \Delta t &amp;\le \frac{\Delta x}{\lambda}, \\ \Delta t &amp;= C_{cfl}\frac{\Delta x}{\lambda}, \\ \end{aligned}\] \[\left(0 &lt; C_{cfl} \le C_{lim}\right).\] <p>where \(C_{lim}\) is the linear stability limit and \(C_{cfl}\) is the CFL number, which is typically defined as \(C_{cfl}=0.9C_{lim}\).</p> <h2 id="shortcut">Shortcut</h2> <p>For the high-order schemes, applying the linear stability analysis mentioned previously become very complicated. To overcome it, the shortcut for stability is as follows:</p> <h3 id="shortcut-to-stability">Shortcut to Stability</h3> <p>If a numerical scheme can be expressed in three-point linear scheme as follows:</p> \[q^{n+1}_i = b_{-1}q^n_{i-1}+b_0q^n_i+b_iq^n_{i+1},\] <p>It is possible to derive a shortcut to stability, using the von Neumann method, giving these two conditions:</p> <ul> <li>\(b_0=\left(b_{-01}+b_1\ge0\right)\),</li> <li>\(b_0=\left(b_{-1}+b_1\right)+4b_{-1}b_1 \ge 0\).</li> </ul> <h3 id="shortcut-to-accuracy">Shortcut to Accuracy</h3> <p>In addition to shortcut for stability, there is shortcut for accuracy, which is more simpler than using LTE.</p> <p>Linear scheme is \(p\)-th order accurate in space and time in the sense of LTE when satisfying</p> \[\sum^r_{k=-l}k^\eta b_k=\left(-c\right)^\eta,\quad\eta=0,1,...,p.\] <h2 id="various-forms">Various Forms</h2> <p>In addition to general form and conservative form, the numerical schemes can be written as follows:</p> <h3 id="incremental-form">Incremental Form</h3> \[\begin{aligned} C_{i+1/2}&amp;=C_{i+1/2}\left(q^n_{i-k},q^n_{i-k+1},...,q^n_{i},...,q^n_{i+k}\right) \\ D_{i+1/2}&amp;=D_{i+1/2}\left(q^n_{i-k},q^n_{i-k+1},...,q^n_{i},...,q^n_{i+k}\right) \end{aligned}\] <p>Using these, a three-point scheme can be written as</p> \[q_i^{n+1}=q^n_i-C_{i-1/2}\Delta q_{i-1/2} +D_{i+1/2}\Delta q_{i+1/2}\] <p>where \(\Delta q_{i-1/2} = q^n_i-q^n_{i-1}\) and \(\Delta q_{i+1/2} = q^n_{i+1}-q^n_{i}\)</p> <h3 id="viscous-form">Viscous Form</h3> \[d_{i+1/2}=d_{i+1/2}\left(q^n_{i-k},q^n_{i-k+1},...,q^n_{i},...,q^n_{i+k}\right)\] <p>Using this, a three-point scheme can be written as</p> \[\begin{aligned} q^{n+1}_i = q^n_i&amp;-\frac{1}{2}\frac{\Delta t}{\Delta x}\left[f(q^n_{i+1})-f(q^n_{i-1})\right] \\ &amp;+ \frac{1}{2}(d_{i+1/2}\Delta q_{i+1/2}-d_{i-1/2}\Delta q_{i-1/2}) \end{aligned}\] <p>where the function \(d_{i+1/2}\) is the coefficient of numerical viscosity, which is different from that of LTE (i.e., \(\alpha_{visc}\)). The second term in equation is called the central part and third term is called viscous part (diffusion part).</p> <p>For simplicity, the three-point linear scheme can be represented by</p> \[q^{n+1}_i = b_{-1}q^n_{i-1}+b_0q^n_i+b_1q^n_{i+1}.\] <p>If this scheme is at least first-order, from the accuracy lemma, the coefficients are given by</p> \[\begin{aligned} \sum^r_{k=-l}k^0 b_k&amp;=\left(-c\right)^0 \quad\rightarrow\quad b_{-1}+b_0+b_1=1,\\ \sum^r_{k=-l}k^1 b_k&amp;=\left(-c\right)^1 \quad\rightarrow\quad b_{-1}-b_1=c \end{aligned}\] <p>There are two equations, but three parameters, giving a one-parameter family of solutions. From the first equation,</p> \[d=b_{-1}+b_1=1-b_0\] \[\begin{aligned} b_{-1}&amp;=\frac{1}{2}(d+c)\\ b_0&amp;=1-d\\ b_1&amp;=\frac{1}{2}(d-c) \end{aligned}\] <p>Using these, the scheme can be expressed by</p> \[\begin{aligned} q^{n+1}_i=q^n_i&amp;-\frac{1}{2}c(q^n_{i+1}-q^n_{i-1})\\ &amp;+\frac{1}{2}d(q^n_{i+1}-2q^n_i+q^n_{i-1}) \end{aligned}\] <p>As mentioned previously, \(d\) is the coefficient of numerical viscosity, second term is called the central part, and third term is the diffusion part.</p> <p>Using the coefficient of numerical viscosity, the stability condition become much simpler</p> \[c^2\le d\le 1,\] <p>and coefficient of numerical viscosity in the sense of truncation error analysis has following relation:</p> \[\alpha_{visc}=\frac{1}{2}\Delta x \lambda\left(\frac{d-c^2}{c}\right).\] <p>Particular values of \(d\) give particular schemes as follows:</p> \[d = \begin{cases} 1 &amp; \rightarrow \text { Lax-Friedrichs } \\ \frac{1}{2}(1+c^2) &amp; \rightarrow \text { FORCE } \\ \vert c\vert &amp; \rightarrow \text { Godunov upwind } \\ c^2 &amp; \rightarrow \text { Lax-Wendroff } \end{cases}\] <h4 id="proposition">Proposition.</h4> <p>Godunov upwind scheme for the linear advection equations is the monotone scheme with the smallest truncation error.</p> <h2 id="total-variation">Total Variation</h2> <h3 id="total-variation-1">Total Variation</h3> <p>The total variation of a mesh function \(q^n=\{q^n_i\}\), which is set of discretized values, is defined as</p> \[TV(q^n)=\sum^\infty_{-\infty}\vert q^n_{i+1}-q^n_{i}\vert\] <p>If the solution \(q\) is given by uniform value, total variation goes to zero, on the other hand, if there is oscillation in solution, total variation increase. Thus, total variation can measure the oscillatory character of the mesh function.</p> <h3 id="total-variation-method">Total Variation Method</h3> <p>Numerical method is TVD (Total Variation Diminishing), if satisfying</p> \[TV(q^{n+1}) \le TV(q^n)\] <p>This means that total variation does not increase with time. For example, if the solution is flat at \(t=n\) but has an oscillatory solution at \(t=n+1\), the total variation will increase, therefore this scheme is not total variation method.</p> <h3 id="example-lax-friedrichs-scheme">Example: Lax-Friedrichs Scheme</h3> \[\begin{aligned} q^{n+1}_i &amp;= \frac{1}{2}(1+c)q^n_{i-1}+\frac{1}{2}(1-c)q^n_{i+1} \\ q^{n+1}_{i+1} &amp;= \frac{1}{2}(1+c)q^n_{i}+\frac{1}{2}(1-c)q^n_{i+2} \end{aligned}\] \[\begin{aligned} q^{n+1}_{i+1}-q^{n+1}_{i} &amp;=\frac{1}{2}(1+c)(q^n_i-q^n_{i-1})+\frac{1}{2}(1-c)(q^n_{i+2}-q^n_{i+1}) \\ \vert q^{n+1}_{i+1}-q^{n+1}_{i}\vert&amp;=\frac{1}{2}(1+c)\vert q^n_i-q^n_{i-1}\vert+\frac{1}{2}(1-c)\vert q^n_{i+2}-q^n_{i+1}\vert \end{aligned}\] <p>After summation over all integer \(i\),</p> \[\sum\vert q^{n+1}_{i+1}-q^{n+1}_{i}\vert = \sum\vert q^n_{i+1}-q^{n}_{i} \vert\] \[TV(q^{n+1}) \le TV(q^{n}).\] <p>Therefore, the Lax-Friedrichs scheme is TVD.</p> <h3 id="hartens-theorem">Harten’s Theorem</h3> <p>The set of monotone methods is a subset of the set of TVD methods, and for any scheme in incremental form, sufficient conditions for the scheme to be TVD are as follows:</p> \[C_{i+\frac{1}{2}}\ge0, \quad D_{i+\frac{1}{2}}\ge0, \quad 0\le C_{i+\frac{1}{2}}+D_{i+\frac{1}{2}}\le1\] <p>where coefficients are data dependent, i.e., \(C_{i+\frac{1}{2}}=C_{i+\frac{1}{2}}\left(q\right)\) and \(D_{i+\frac{1}{2}}=D_{i+\frac{1}{2}}\left(q\right)\), thus applies to non-linear schemes.</p> <p>It is noted that monotone methods and TVD methods are only defined for scalar equations, not for systems.</p>]]></content><author><name></name></author><category term="CFD"/><category term="numerical_method"/><summary type="html"><![CDATA[This is based on the Computational Modeling for Fluid Dynamics course, which I took at SNU during the summer semester of 2021, by Prof. E.F. Toro.]]></summary></entry><entry><title type="html">Instance-Conditional Knowledge Distillation for Object Detection (ICD)</title><link href="https://seonghak35.github.io/blog/2024/ICD/" rel="alternate" type="text/html" title="Instance-Conditional Knowledge Distillation for Object Detection (ICD)"/><published>2024-01-18T00:00:00+00:00</published><updated>2024-01-18T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/ICD</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/ICD/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>High performance의 Deep Learning Networks의 성능을 얻기 위해서는, 불가피하게 많은 양의 parameters를 수반하게 되며, 이는 high computational cost와 memory를 필요하게 만든다. 따라서, Resource-limited devices에서 object detection과 같은 실용적인 application을 사용하기 위해, network pruning, quantization, mobile architecture design, 그리고 knowledge distillation (KD)의 방법들이 등장했다. 그 중에서 KD는 추가적인 inference time 부담과 수정없이 network의 효율성과 성능을 개선시킬 수 있기 때문에 많이 적용되고 있다.</p> <p>지금까지의 많은 KD들은 image classification에 집중되어 연구가 진행되었고, 다음의 이유로 인해 이를 object detection에 그대로 적용하기는 힘들다고 알려져 있다.</p> <ol> <li>물체의 localization이 고려되지 않았다.</li> <li>서로 다른 위치에 분포되어 있는 여러개의 물체들이 하나의 이미지에 나타나 있다 (서로 다른 위치로부터의 representation은 서로 다른 contribution를 가지므로 distillation를 어렵게 만든다, i.e., imbalance issue).</li> </ol> <p>이를 해결하기 위해 기존의 논문들은 다음과 같은 방법을 사용했다.</p> <ol> <li>classification과 localization에 대한 정보를 함께 가진 intermediate representations를 distillation한다.</li> <li>imbalance 문제를 해결하기 위해 different feature selection 방법을 사용한다. <ul> <li>Proposal-based: RPN에 의해 예측된 proposal regions이나 detector를 활용</li> <li>Rule-based: pre-design된 rule로 선별된 regions을 활용 <br/> ; 하지만, 이러한 방법들은 유익한 informative regions를 무시한다.</li> <li>Attention-based: discriminative area에 대한 hints를 제공하지만, detection을 위한 activation과 knowledge사이의 관계가 clear하지 않다.</li> </ul> </li> </ol> <p>이에 따라, 본 논문에서는 Instance-Conditional knowledge Distillation (ICD)를 제안함으로써, knowledge를 feature selection과 연결하는 explicit solution을 제공한다. 이를 위해,</p> <ul> <li>transformer decoder를 통해 instance-aware attention으로 지식과 각 instance 사이의 correlation을 측정함으로써, 서로 다른 instance와 관련된 지식을 찾도록 하는 conditional decoding module를 설계한다.</li> <li>여기서, 사람이 관찰한 instance를 query로 사용하고, teacher’s representation (decomposed into key and value)과의 사이를 scaled-product attention을 통해 correlation을 계산한다.</li> </ul> <p>결과적으로, decoder를 통해 구분된 features들을 distillation하고, instance-aware attention을 통해 weighted된다.</p> <h2 id="related-works">Related Works</h2> <h3 id="object-detection">Object Detection</h3> <p>Object detection에서의 detector은 크게 two-stage 또는 one-stage detectors로 구분할 수 있다. Two-stage는 일반적으로 Region Proposal Network (RPN)을 사용하여, 초기의 대략적인 prediction을 얻고, detection heads를 통해 이를 refine하는 과정을 거친다. 대표적으로 Faster F-CNN이 있다. 반면, one-stage detectors의 경우, feature map에 대해 바로 예측을 하기 때문에 더 빠르다고 알려져 있다. 대표적으로 RetinaNet이 있다.</p> <h2 id="method">Method</h2> <h3 id="overview">Overview</h3> <p>일반적으로, detection의 유용한 지식들은 intermediate features에 불균등하게 분포되어 있다. 이를 개선하기 위해 본 논문은, 다음과 같은 식을 통해, instance-conditional knowledge를 전달한다.</p> \[\mathcal{L}_=\sum_{i=1}^N \mathcal{L}_d\left(\kappa_i^{\mathcal{S}}, \kappa_i^{\mathcal{T}}\right)\] <p>여기서, \(\kappa_i^\mathcal{T}=\mathcal{G}(\mathcal{T},\mathrm{y}_i)\)는 condition \((\mathrm{y}_i)\)과 teacher representations \((\mathcal{T})\)에 대한 knowledge를 의미하고, \(\mathcal{G}\)는 instance-conditional decoding module를 나타내며, 이는 auxiliary loss를 통해 최적화된다.</p> <h3 id="instance-conditional-knowledge-kappa_i">Instance-Conditional Knowledge \((\kappa_i)\)</h3> <p>Instance-conditional decoding module \((\mathcal{G})\)을 통해 instance condition이 주어졌을 때, unconditional knowledge \((\mathcal{T})\)로부터 instance-conditional knowledge \((\kappa^\mathcal{T}_i)\)를 구할 수 있다.</p> <ol> <li>Unconditional knowledge \((\mathcal{T})\)는 teacher detector로부터 사용가능한 모든 정보를 의미한다. Multi-scale representations로 나타내면 \(\mathcal{T}=\left[X_p\in\mathbb{R}^{D \times H_p \times W_p}\right]_{p\in\mathcal{P}}\)가 되며, 여기서 \(\mathcal{P}\)는 spatial resolutions, \(D\)는 channel dimension을 의미한다. Spatial dimension를 따라 서로 다른 scales의 representations을 concatenation하게 되면 \(A^\mathcal{T}\in\mathbb{R}^{L\times D}\)가 되며, 여기서 \(L=\sum_{p\in\mathcal{P}}H_p\times W_p\)는 scale를 걸쳐서 모든 pixels의 수를 합한 것이다.</li> <li>Instance condition은 \(\mathcal{Y}=(\mathrm{y}_i)^N_{i=1}\)로 나타내며, 여기서 \(N\)는 object의 수를, \(\mathrm{y}_i=(c_i,\mathbf{b}_i)\)는 \(i\)-th instance에 대한 annotation를 의미한다. 즉, category \(c_i\)와 box location \(\mathbf{b}_i=(x_i,y_i,w_i,h_i)\)이다.</li> </ol> <p>각 instance에 대해 학습가능한 embedding를 만들기 위해, annotation을 hidden space상에서의 query feature vector \((\mathbf{q}_i)\)로 mapping하게 되며, 이때 아래의 식처럼, 원하는 knowledge를 얻기위해 condition을 지정하게 된다.</p> \[\mathbf{q}_i=\mathcal{F}_q(\mathcal{E}(\mathrm{y}_i)),\quad\mathbf{q}_i\in\mathbb{R}^D\] <p>여기서 \(\mathcal{E}(\cdot)\)는 instance encoding function을, \(\mathcal{F}_q\)는 MLP를 나타낸다.</p> <p>\(\mathbf{q}_i\)가 주어졌을 때, \(\mathcal{T}\)로부터의 knowledge를 찾기 위해서 correlation을 측정하는데, 이는 dot-product attention을 사용하여 얻을 수 있으며, 각 head \(j\)는 3개의 선형 layers \((\mathcal{F}^k_j,\mathcal{F}^k_q,\mathcal{F}^k_v)\)에 상응한다.</p> <p>아래의 식과 같이, key feature \((\mathrm{K}^\mathcal{T}_j)\)는 teacher의 representation \((\mathrm{A}^\mathcal{T})\)를 positional embeddings \((\mathrm{P}\in\mathbb{R}^{L\times d})\)과 projection하여 계산할 수 있다.</p> \[\mathrm{K}_j^{\mathcal{T}}=\mathcal{F}_j^k\left(\mathrm{A}^{\mathcal{T}}+\mathcal{F}_{p e}(\mathrm{P})\right), \mathrm{K}_j^{\mathcal{T}} \in \mathbb{R}^{L \times d}\] <p>여기서, \(\mathcal{F}_{p e}\)는 position embeddings를 통한 선형 projection을 의미한다. 유사하게, value feature와 query는 아래와 같다.</p> \[\mathrm{V}_j^{\mathcal{T}}=\mathcal{F}_j^v\left(\mathrm{A}^{\mathcal{T}}\right), \quad \mathrm{V}_j^{\mathcal{T}} \in \mathbb{R}^{L \times d}\] \[\mathbf{q}_{i j}=\mathcal{F}_j^q\left(\mathbf{q}_i\right), \quad \mathbf{q}_{i j} \in \mathbb{R}^d\] <p>마지막으로, \(j\)-th head에 의한 \(i\)-th instance의 instance-aware attention mask \(\mathbf{m}_{ij}\)는 \(\mathrm{K}_j^\mathcal{T}\)와 \(\mathbf{q}_{ij}\)사이의 normalized dot-product를 통해 구할 수 있다.</p> \[\mathbf{m}_{i j}=\operatorname{softmax}\left(\frac{\mathrm{K}_j^{\mathcal{T}} \mathbf{q}_{i j}}{\sqrt{d}}\right), \mathbf{m}_{i j} \in \mathbb{R}^L\] <p>최종적으로, querying along the key feature \((\mathbf{m}_{i j})\)와 value features \((\mathrm{V}_j^{\mathcal{T}})\)는 representations과 instances간의 correlation을 의미하기 때문에 instance-condition knowledge는 \(\kappa_i^{\mathcal{T}}=\left\{\left(\mathbf{m}_{i j}, \mathrm{V}_j^{\mathcal{T}}\right)\right\}_{j=1}^M\)가 되며, 이는 \(i\)-th instance에 상응하는 knowledge를 encoding한다.</p> <h3 id="auxiliary-task">Auxiliary Task</h3> <p>앞서 설명한 decoding module \((\mathcal{G})\)을 최적화하기 위해 auxiliary tasks를 활용한다. 우선, 함수 \(\mathcal{F}_{agg}\)로 instance-conditional knowledge를 통합 (instance-level aggregated information \(\mathbf{g}_i^{\mathcal{T}}\))하여 객체를 식별하고 위치를 파악할 수 있다.</p> \[\mathbf{g}_i^{\mathcal{T}}=\mathcal{F}_{a g g}\left(\kappa_i^{\mathcal{T}}, \mathbf{q}_i\right), \mathbf{g}_i^{\mathcal{T}} \in \mathbb{R}^D\] <p>Instance-level aggregated information \(\mathbf{g}_i^{\mathcal{T}}\)이 충분한 instance 단서를 유지하도록 하기위해, 아래와 같이 instance-sensitive tasks를 사용하여 최적화한다.</p> \[\mathcal{L}_{a u x}=\mathcal{L}_{i n s}\left(\mathbf{g}_i^{\mathcal{T}}, \mathcal{H}\left(\mathrm{y}_i\right)\right)\] <p>여기서 \(\mathcal{H}\)는 instance information을 targets으로 encode한다.</p> <p>다만, 위 식에서 \(i\)-th instance annotation에 해당하는 \(\mathrm{y}_i\)를 \(\mathbf{g}_i^{\mathcal{T}}\)와 \(\mathcal{H}\left(\mathrm{y}_i\right)\)를 통해서 구할수 있기 때문에 위 식을 바로 사용하면 trivial solution이 된다. 이는 결과적으로, teacher representation \(\mathcal{T}\)를 무시하고 parameters를 학습하게 될 가능성이 있다는 것을 의미한다. 이를 해결하기 위해, encoding function \(\mathcal{E}(\cdot)\)에 대한 정보를 drop하여 aggregation function \(\mathcal{F}_{agg}\)이 \(\mathcal{T}\)로부터 hint를 얻도록한다.</p> <p>이러한 information dropping은 instance condition에 대한 정확한 annotation을 불확실한 것으로 교체하는 것을 의미하는데, bounding box annotations의 경우에는, 아래의 식과 같이 rough box center \(\left(x_i', y_i'\right)\)와 rough scales indicators \([\log_2(w_i)], [\log_2(h_2)]\)를 활용하여 얻을 수 있다.</p> \[\left\{\begin{array}{l} x_i^{\prime}=x_i+\phi_x w_i, \\ y_i^{\prime}=y_i+\phi_y h_i, \end{array}\right.\] <p>여기서, \(\left(w_i,w_i\right)\)는 bounding box의 width와 height를 나타내며, \(\phi_x, \phi_y\)는 uniform distribution \(\Phi \sim U[-3, 3]\)에서 샘플된 값을 의미한다. 결과적으로 coarse information을 얻어 \(\mathcal{E}\)를 통해 instance encoding을 얻을 수 있다.</p> <p>Aggregated representation \(\mathbf{g}_i^\mathcal{T}\)는 auxiliary task로 최적화되는 데, 이를 위해 \(\mathcal{F}_{obj}\)와 \(\mathcal{F}_{reg}\)를 각각 도입하여, identification과 localization results를 예측한다. 아래의 식과 같이 real-fake identification을 최적화하기 위해 binary cross entropy loss (BCE)를, regression을 최적화하기 위해 \(L1\) loss를 적용한다.</p> \[\mathcal{L}_{aux}=\mathcal{L}_{BCE}\left(\mathcal{F}_{obj}\left(\mathbf{g}_i^\mathcal{T}\right),\delta_{obj}(\mathrm{y}_i)\right)+\mathcal{L}_{1}\left(\mathcal{F}_{reg}\left(\mathbf{g}_i^\mathcal{T}\right),\delta_{reg}(\mathrm{y}_i)\right)\] <p>여기서, \(\delta_{obj}(\cdot)\)은 indicator로서, \(\mathrm{y}_i\)가 real이면 1을 fake이면 0을 뱉어낸다.</p> <h3 id="instance-conditional-distillation">Instance-Conditional Distillation</h3> <p>Conditional knowledge distillation를 하기 위해, student representations의 projected value features \(\mathrm{V}_j^\mathcal{S}\in\mathbb{R}^{L\times d}\)를 얻고, feature와 각 instance 사이의 correlations을 측정하는 instance-aware attention mask \(\mathbf{m}_{ij}\)를 사용함으로써, 아래와 같이 distillation loss를 설계할 수 있다.</p> \[\mathcal{L}_{distill} = \frac{1}{MN_r}\sum^{M}_{j=1}\sum^{N}_{i=1}\delta_{obj}(\mathrm{y}_i)\cdot\left&lt;\mathbf{m}_{ij},\mathcal{L}_{MSE}\left(\mathrm{V}^\mathcal{S}_j,\mathrm{V}^\mathcal{T}_j\right)\right&gt;\] <p>여기서, \(N_r=\sum^{N}_{i=1}\delta_{obj}(\mathrm{y}_i), (N_r\le N)\)는 real instance의 수를 나타내고, \(\mathcal{L}_{MSE}\left(\mathrm{V}_j^\mathcal{S},\mathrm{V}_j^\mathcal{T}\right)\in\mathbb{R}^L\)는 pixel-wise mean-square error를 표현하며, \(\left&lt;\cdot,\cdot\right&gt;\)은 inner product를 위한 Dirac notation이다. Supervised learning loss \(\mathcal{L}_{det}\)를 포함하는 전체 loss function은 아래와 같다.</p> \[\mathcal{L}_{total}=\mathcal{L}_{det} + \mathcal{L}_{aux}+\lambda\mathcal{L}_{distill}\] <p>여기서, \(\mathcal{L}_{det}\)와 \(\mathcal{L}_{distill}\)에 대한 gradient만 student network로 back-propagation되며 (student networks를 학습할 때 활용), \(\mathcal{L}_{aux}\)의 gradient는 instance-conditional decoding function \(\mathcal{G}\)과 auxiliary task와 관련된 modules만을 update한다.</p> <h2 id="conclusion">Conclusion</h2> <p>본 논문은 human observed instances와 연관된 knowledge를 찾고 선택하기 위한 instance-feature cross attention를 활용하는 Instance-Conditional knowledge Distillation (ICD)를 제안했다. 본 방법은 instance를 query로, teacher’s representation을 key로 encode하며, knowledge를 찾는 방법을 decoder에게 학습하기 위해, auxiliary task를 설계했다. 제안된 방법은 다양한 detectors에 대해 일관되게 성능을 향상시켰으며, 몇몇 student networks는 teacher networks보다 성능이 뛰어났다.</p>]]></content><author><name></name></author><category term="AI"/><category term="model_compression"/><summary type="html"><![CDATA[Review of "Instance-Conditional Knowledge Distillation for Object Detection" by Z. Kang et al., as presented at NeurIPS 2021]]></summary></entry><entry><title type="html">Mathematical Derivations and Basic Analytical Models of Two-Phase Flow (1)</title><link href="https://seonghak35.github.io/blog/2024/two_phase_models_kor_part1/" rel="alternate" type="text/html" title="Mathematical Derivations and Basic Analytical Models of Two-Phase Flow (1)"/><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/two_phase_models_kor_part1</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/two_phase_models_kor_part1/"><![CDATA[<h2 id="two-phase-flow">Two-Phase Flow</h2> <p>Two-phase flow는 density와 viscous가 다른 2개의 유체가 함께 흐르는 것이기 때문에 각 phase간의 상대운동이 혼합 유동에 미치는 영향을 추가로 고려해야 한다. 즉, two-phase 흐름에서는 단위 체적당 기체 (or 액체)가 액체 (or 기체)에서 어떻게 분산되어 흐르는가에 따라 관내에서 발생하는 마찰저항 (or 압력강화)과 각 상간의 열 및 물질전달량이 변화하게 된다.</p> <h3 id="analytical-models">Analytical Models</h3> <p>이를 수학적으로 표현하기 위해, 기체와 액체의 속도가 같고, 평균 density와 평균 viscosity를 가정하는 <em>homogeneous flow model</em>과 기체와 액체의 서로 다른 속도를 반영하고, 2상간의 상호작용을 유동조건에 연결시키는 <em>separated flow model</em>, 그리고 평균유동과 이에 대한 각 상의 상대 유동을 기술하는 <em>drift flux model</em>등이 제안되었다. 기술한 방법들은 거시적인 관점에서 다루기 때문에, 많은 부분을 경험에 의존하게 된다. 반면, 미시적 관점의 모델로는 flow pattern model이 있으며, 이는 특정 flow pattern에 대해 한정적으로 적용된다. 이는 거시적 관점에서 본 모델들과 비교해서 더 정확하지만, flow pattern을 미리 예측해야한다는 단점이 있다.</p> <p>미시적 관점을 임의의 flow pattern에 일반화하게 되면, instantaneous conservation equation (local instantaneous equations)을 유도할 수 있으며, 적절한 averaging process를 거치면 two-fluid model, separated flow model, or homogeneous flow model등 을 유도할 수 있다 (but, averaging process를 거치게되면 수식을 간단화할 수는 있지만, 유동에 대한 중요 정보를 잃어버릴 수 있기 때문에 이를 반영하는 constitutive relation을 구해야할 필요가 있다). 또한, continuous phase는 Eulerain관점에서, dispersed phase는 Lagrangian관전에서 다루는 Eulerain-Lagrangian model을 유도할 수 있다.</p> <h2 id="integral-balance-relations">Integral Balance Relations</h2> <p>각 phase의 내부는 단상유동와 유사하게 differential equation 형태의 보존방정식을 유도할 수 있지만, interface에서는 density와 viscosity가 discontinuity하기 때문에 적절한 jump condition을 설정해야한다. 각 phase의 보존방정식과 jump condition으로부터 Local Instantaneous Equation을 유도할 수 있다.</p> <h3 id="mass-balance-relation">Mass Balance Relation</h3> <p>고정된 임의 형태의 control volume에 대해서, 액체가 차지하는 체적과 표면적을 각각 \(V_{\ell}(t), a_{\ell}(t)\), 기체가 차지하는 체적과 표면적을 각각 \(V_{g}(t), a_{g}(t)\), 그리고 기체와 액체간의 경계면적을 \(a_{i}(t)\)라고 하면, mass balance relation은 다음과 같다.</p> \[\begin{aligned} &amp; \frac{d}{d t} \int_{V_{\ell}(t)}^{} \rho_{\ell} d V+\frac{d}{d t} \int_{V_g(t)}^{} \rho_g d V \\ &amp; +\int_{a_{\ell}(t)}^{} \rho_{\ell}\left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)}^{} \rho_g\left(\vec{u}_g \cdot \vec{n}_g\right) d a \\ &amp; =0 \end{aligned}\] <p>여기서,</p> \[\frac{d}{d t} \int_{V_{\ell}(t)}^{} \rho_{\ell} d V+\frac{d}{d t} \int_{V_g(t)}^{} \rho_g d V\] <p>는 control volume내의 시간에 대한 질량의 변화량이며,</p> \[\int_{a_{\ell}(t)}^{} \rho_{\ell}\left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)}^{} \rho_g\left(\vec{u}_g \cdot \vec{n}_g\right) d a\] <p>는 control volume의 surface를 통한 질량의 순수 유입량이다.</p> <h3 id="momentum-balance-relation">Momentum Balance Relation</h3> <p>동일하게, Momentum balance relation은 다음과 같이 표현할 수 있다.</p> \[\begin{aligned} &amp; \frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} \vec{u}_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g \vec{u}_{g} d V \\ &amp; +\int_{a_{\ell}(t)} \rho_{\ell} \vec{u}_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a +\int_{a_g(t)} \rho_g \vec{u}_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a \\ &amp; =\int_{V_{\ell}(t)} \rho_{\ell}\vec{F} dV + \int_{V_{g}(t)} \rho_{g}\vec{F} dV \\ &amp; + \int_{a_{\ell}(t)} \vec{n}_{\ell}\cdot\vec{T}_{\ell} da + \int_{a_{g}(t)} \vec{n}_{g}\cdot\vec{T}_{g} da \end{aligned}\] <p>여기서,</p> \[\frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} \vec{u}_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g \vec{u}_{g} d V\] <p>는 control volume내의 시간에 대한 운동량의 변화량이고,</p> \[\int_{a_{\ell}(t)} \rho_{\ell} \vec{u}_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)} \rho_g \vec{u}_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a\] <p>는 control volume의 surface를 통한 운동량의 순수 유입량이며,</p> \[\begin{aligned} &amp; \int_{V_{\ell}(t)} \rho_{\ell}\vec{F} dV + \int_{V_{g}(t)} \rho_{g}\vec{F} dV \\ &amp; + \int_{a_{\ell}(t)} \vec{n}_{\ell}\cdot\vec{T}_{\ell} da + \int_{a_{g}(t)} \vec{n}_{g}\cdot\vec{T}_{g} da \end{aligned}\] <p>는 control volume에 작용하는 체적력 (e.g., 중력)과 surface에 작용하는 표면력 (e.g., 압력, 전단력)을 의미한다. 여기서, 표면장력에 의한 momentum 변화는 고려하지 않았다.</p> <h3 id="energy-balance-relation">Energy Balance Relation</h3> <p>또한, energy balance relation은 다음과 같다.</p> \[\begin{aligned} &amp; \frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} E_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g E_{g} d V \\ &amp; +\int_{a_{\ell}(t)} \rho_{\ell} E_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)} \rho_g E_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a \\ &amp; =\int_{V_{\ell}(t)} \rho_{\ell}\vec{F}\cdot \vec{u}_{\ell} dV + \int_{V_{g}(t)} \rho_{g}\vec{F}\cdot \vec{u}_{g} dV \\ &amp; + \int_{a_{\ell}(t)} \vec{n}_{\ell}\cdot\left(\vec{T}_{\ell}\cdot \vec{u}_{\ell}\right) da + \int_{a_{g}(t)} \vec{n}_{g}\cdot\left(\vec{T}_{g}\cdot \vec{u}_{g}\right) da \\ &amp; - \int_{a_{\ell}(t)} \vec{q}_{\ell}\cdot \vec{n}_{\ell} da - \int_{a_{g}(t)} \vec{q}_g\cdot \vec{n}_{g} da \end{aligned}\] <p>여기서, \(E_{k}=\frac{1}{2}u_{k}^2+e_{k}\), \((k=\ell, g)\)이다.</p> \[\frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} E_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g E_{g} d V\] <p>는 control volume내의 시간에 대한 총에너지 변화량이고,</p> \[\int_{a_{\ell}(t)} \rho_{\ell} E_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)} \rho_g E_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a\] <p>는 control volume의 surface를 통한 총에너지의 순수 유입량이다. 또한,</p> \[\int_{V_{\ell}(t)} \rho_{\ell}\vec{F}\cdot \vec{u}_{\ell} dV + \int_{V_{g}(t)} \rho_{g}\vec{F}\cdot \vec{u}_{g} dV\] <p>는 체적력에 의한 power이고,</p> \[\int_{a_{\ell}(t)} \vec{n}_{\ell}\cdot\left(\vec{T}_{\ell}\cdot \vec{u}_{\ell}\right) da + \int_{a_{g}(t)} \vec{n}_{g}\cdot\left(\vec{T}_{g}\cdot \vec{u}_{g}\right) da\] <p>는 표면력에 의한 power를 나타내며,</p> \[\int_{a_{\ell}(t)} \vec{q}_{\ell}\cdot \vec{n}_{\ell} da + \int_{a_{g}(t)} \vec{q}_g\cdot \vec{n}_{g} da\] <p>는 표면적을 통해 전달되는 열전달량이다.</p> <h3 id="entropy-balance-relation">Entropy Balance Relation</h3> <p>마지막으로, entropy balance relation은 다음과 같다.</p> \[\begin{aligned} &amp; \frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} s_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g s_{g} d V\\ &amp; +\int_{a_{\ell}(t)} \rho_{\ell} s_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)} \rho_g s_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a \\ &amp; + \int_{a_\ell(t)}\frac{1}{T_\ell}\left(\vec{q}_{\ell}\cdot \vec{n}_{\ell}\right)da + \int_{a_g(t)}\frac{1}{T_g}\left(\vec{q}_{g}\cdot \vec{n}_{g}\right)da \\ &amp; = \int_{V_\ell(t)}\Delta_\ell dV + \int_{V_g(t)}\Delta_g dV+\int_{a_i(t)}\Delta_ida \ge0 \end{aligned}\] <p>여기서,</p> \[\frac{d}{d t} \int_{V_{\ell}(t)} \rho_{\ell} s_{\ell} d V+\frac{d}{d t} \int_{V_g(t)} \rho_g s_{g} d V\] <p>는 control volume내의 시간에 대한 엔트로피 변화량이고,</p> \[\int_{a_{\ell}(t)} \rho_{\ell} s_{\ell} \left(\vec{u}_{\ell} \cdot \vec{n}_{\ell}\right) d a+\int_{a_g(t)} \rho_g s_{g} \left(\vec{u}_g \cdot \vec{n}_g\right) d a\] <p>는 control volume의 surface를 통한 엔트로피의 순수 유입량을 나타내며,</p> \[\int_{a_\ell(t)}\frac{1}{T_\ell}\left(\vec{q}_{\ell}\cdot \vec{n}_{\ell}\right)da + \int_{a_g(t)}\frac{1}{T_g}\left(\vec{q}_{g}\cdot \vec{n}_{g}\right)da\] <p>는 표면을 통해 전달되는 열전도에 의한 엔트로피 변화량이다. 또한, \(\Delta_\ell, \Delta_g\) 및 \(\Delta_i\)는 각각 단위체적당 엔트로피 생성량 및 경계면에서의 단위면적당 엔트로피 생성량을 의미한다. Entropy relation은 열역학 제2법칙에 따라 항상 0보다 크다.</p> <h3 id="generalization">Generalization</h3> <p>위의 식들을 모두 내포하는 generalized 적분형태의 보존관계식은 다음과 같다.</p> \[\begin{aligned} &amp; \sum_{k=\ell, g} \frac{d}{d t} \int_{V_k(t)} \rho_k \psi_k d V+\sum_{k=\ell, g} \int_{a_k(t)} \rho_k \psi_k\left(\vec{u}_k \cdot \vec{n}_k\right) d a \\ &amp; =\sum_{k=\ell, g} \int_{V_k(t)} \rho_k \phi_k d V+\sum_{k=\ell, g} \int_{a_k(t)} \vec{n}_k \cdot \vec{J}_k d a+\int_{a_i(t)} \phi_i d a \\ &amp; \end{aligned}\] <p>여기서, \(\psi_k, \vec{J}_{k}, \phi_k, \phi_i\)는 각각 다음과 같이 표현할 수 있다.</p> <table> <thead> <tr> <th>Balance relation</th> <th>\(\psi_k\)</th> <th>\(\phi_k\)</th> <th>\(\vec{J}_k\)</th> <th>\(\phi_i\)</th> </tr> </thead> <tbody> <tr> <td>Mass</td> <td>1</td> <td>0</td> <td>0</td> <td>0</td> </tr> <tr> <td>Momentum</td> <td>\(\vec{u}_k\)</td> <td>\(\vec{F}\)</td> <td>\(\vec{T}_k\)</td> <td>0</td> </tr> <tr> <td>Total Energy</td> <td>\(E_k\)</td> <td>\(\vec{F}\cdot\vec{u}_k\)</td> <td>\(\vec{T}_k\cdot\vec{u}_k - \vec{q}_{k}\)</td> <td>0</td> </tr> <tr> <td>Entropy</td> <td>\(s_k\)</td> <td>\({\Delta_k}/{\rho_k}\)</td> <td>\(-{\vec{q}_k}/{T_k}\)</td> <td>\(\Delta_i\)</td> </tr> </tbody> </table> <p><br/></p> <h2 id="local-instantaneous-equations">Local Instantaneous Equations</h2> <p>Generalized 적분형태의 보존관계식에 Leibniz rule과 Gauss theorem을 적용하면 다음과 같이 된다.</p> \[\begin{aligned} &amp; \sum_{k=\ell, g}\int_{V_\ell(t)}\left[ \frac{\partial}{\partial t}\left(\rho_k\psi_k\right) + \nabla\cdot\left(\rho_k\psi_k\vec{u}_k\right) - \nabla\cdot\vec{J}_k - \rho_k\phi_k \right]dV \\ &amp;- \int_{a_i(t)}\left[\sum_{k=\ell,g}\left(\dot{m}_k\psi_k-\vec{n}_k\cdot\vec{J}_k\right) +\phi_i\right]da=0 \end{aligned}\] <p>여기서, \(\dot{m}_k\equiv\rho_k\left(\vec{u}_k-\vec{u}_i\right)\cdot\vec{n}_k\) 는 interface를 통한 단위면적당 물질전달량 (i.e., evaporation, condensation)을 의미한다. 본 식은 임의의 control volume과 interface에 대해서 항상 성립해야하기 때문에 적분내의 항들도 각각 0이어야 한다. 따라서,</p> \[\frac{\partial}{\partial t}\left(\rho_k\psi_k\right) + \nabla\cdot\left(\rho_k\psi_k\vec{u}_k\right) - \nabla\cdot\vec{J}_k - \rho_k\phi_k = 0\] \[\sum_{k=\ell,g}\left(\dot{m}_k\psi_k-\vec{n}_k\cdot\vec{J}_k\right) +\phi_i=0\] <p>여기서, 위 식을 local instantaneous equation이라 하고, 아래 식을 local instantaneous jump condition이라 한다.</p> <h3 id="local-instantaneous-equations-1">Local Instantaneous Equations</h3> <h4 id="continuity-equation">Continuity Equation</h4> \[\frac{\partial\rho_k}{\partial t}+\nabla\cdot\left(\rho_k\vec{u}_k\right) = 0\] <h4 id="momentum-equation">Momentum Equation</h4> \[\frac{\partial\left(\rho_k\vec{u}_k\right)}{\partial t}+\nabla\cdot\left(\rho_k \vec{u}_k\vec{u}_k\right)-\rho_k\vec{F}-\nabla\cdot\vec{T}_k=0\] <h4 id="energy-equation">Energy Equation</h4> \[\frac{\partial\left(\rho_kE_k\right)}{\partial t}+\nabla\cdot\left(\rho_kE_k\vec{u}_k\right)-\rho_k\vec{F}\cdot\vec{u}_k-\nabla\cdot\left(\vec{T}_k\cdot\vec{u}_k\right)+\nabla\cdot\vec{q}_k=0\] <h4 id="entropy-inequality">Entropy Inequality</h4> \[\frac{\partial\left(\rho_ks_k\right)}{\partial t}+\nabla\cdot\left(\rho_ks_k\vec{u}_k\right)+\nabla\cdot\frac{\vec{q}_k}{T_k}=\Delta_k\ge0\] <p>위의 기술된 식들은 단상 유동에서 나타나는 보존방정식들의 형태와 동일하다.</p> <h3 id="local-instantaneous-jump-condition">Local Instantaneous Jump Condition</h3> <h4 id="mass-jump-condition">Mass Jump Condition</h4> \[\dot{m}_\ell + \dot{m}_g = 0\] <p>이를 풀어서 적으면 다음과 같다.</p> \[\rho_\ell(\vec{u}_\ell-\vec{u}_i)\cdot\vec{n}_\ell + \rho_g(\vec{u}_g-\vec{u}_i)\cdot\vec{n}_g = 0\] <h5 id="momentum-jump-condition">Momentum Jump Condition</h5> \[\dot{m}_\ell\vec{u}_\ell-\vec{n}_\ell\cdot\vec{T}_\ell + \dot{m}_g\vec{u}_g-\vec{n}_g\cdot\vec{T}_g=0\] <p>여기에, mass jump condition을 활용하면 다음과 같이 된다.</p> \[\dot{m}_\ell\left(\vec{u}_\ell - \vec{u}_g\right)-\vec{n}_\ell\cdot\vec{T}_\ell-\vec{n}_g\cdot\vec{T}_g=0\] <p>여기서, 기체-액체 2상유동의 interface에서 발생하는 표면장력의 영향을 고려하면 다음과 같아진다.</p> \[\dot{m}_\ell\left(\vec{u}_\ell - \vec{u}_g\right)-\vec{n}_\ell\cdot\vec{T}_\ell-\vec{n}_g\cdot\vec{T}_g + S_\text{st}=0\] \[S_\text{st}=\left(\vec{t}_\alpha A^{\alpha\beta}\sigma\right)_{,\beta}\] <p>여기서, 만약 직교좌표계 \(y^k\) 상에서 \((u^1, u^2)\)로 정의되는 surface의 한 점이 \(y^{k}=y^k(u^1, u^2)\)로 주어진다고 하면, surface metric tensor, \(A^{\alpha \beta}\)는 다음과 같이 표현된다.</p> \[A^{\alpha \beta} = \sum^3_{k=1}\frac{\partial y^k}{\partial u^\alpha}\frac{\partial y^k}{\partial u^\beta}\] <p>또한, 공간과 표면사이의 hybrid tensor, \(\vec{t}_{\alpha}\)는 general space coordinate, \(x^i\)에서 표현되는 surface position, \(x^i=x^i(u^1, u^2)\)를 활용하여 다음과 같이 정의된다.</p> \[t^i_{\alpha}=\frac{\partial x^i}{\partial u^{\alpha}}\] <p>그리고, \(()_{,\beta}\)는 space derivative와 유사하지만, curved coordinates effects도 고려하는 covariance surface derivative를 나타내며, \(\sigma\)는 isotropic surface tension을 의미한다.</p> <p><a href="https://link.springer.com/chapter/10.1007/978-0-387-29187-1_9">Reference about surface tension term</a> (pp.28-34)</p> <h5 id="energy-jump-condition">Energy Jump Condition</h5> \[\dot{m}_\ell E_\ell - \vec{n}_\ell\cdot \left(\vec{T}_\ell\cdot \vec{u}_\ell-\vec{q}_\ell\right) + \dot{m}_g E_g - \vec{n}_g\cdot \left(\vec{T}_g\cdot \vec{u}_g-\vec{q}_g\right)=0\] <p>여기서도, 기체-액체 interface에서의 표면장력 영향을 고려하기 위해서는 다음과 같이 추가적인 term이 필요하다.</p> \[\dot{m}_\ell E_\ell - \vec{n}_\ell\cdot \left(\vec{T}_\ell\cdot \vec{u}_\ell-\vec{q}_\ell\right) + \dot{m}_g E_g - \vec{n}_g\cdot \left(\vec{T}_g\cdot \vec{u}_g-\vec{q}_g\right) + S_\text{st}=0\] \[S_\text{st} = T_i\left[\frac{d_s}{dt}\left(\frac{d\sigma}{dT_i}\right)+\left(\frac{d\sigma}{dT_i}\right)\nabla_s\cdot\vec{u}_i\right]+\left(\vec{t}_\alpha A^{\alpha\beta}\sigma\right)_{,\beta}\cdot\vec{u}_i\] <p>여기서, surface tension는 interface 온도의 함수, \(\sigma=\sigma(T_i)\)이며 \(\frac{d_s}{dt}, \nabla_s\)는 interface coordinates에 대한 미분값들이다.</p> <h5 id="interface-entropy-inequality">Interface Entropy Inequality</h5> \[\dot{m}_{\ell}s_{\ell}+\vec{n}_{\ell}\cdot\frac{\vec{q}_\ell}{T_\ell}+ \dot{m}_{g}s_{g}+\vec{n}_{g}\cdot\frac{\vec{q}_g}{T_g}+\Delta_i=0\] <p>이는 다음과 같이 표현할 수 있다.</p> \[\Delta_i = -\dot{m}_{\ell}s_{\ell}-\vec{n}_{\ell}\cdot\frac{\vec{q}_\ell}{T_\ell}- \dot{m}_{g}s_{g}-\vec{n}_{g}\cdot\frac{\vec{q}_g}{T_g}\ge0\] ]]></content><author><name></name></author><category term="CFD"/><category term="multiphase_flow"/><summary type="html"><![CDATA[This is based on the Two-phase flow heat transfer book.]]></summary></entry><entry><title type="html">Basics on Numerical Methods for Hyperbolic Equations</title><link href="https://seonghak35.github.io/blog/2024/toro_chap2/" rel="alternate" type="text/html" title="Basics on Numerical Methods for Hyperbolic Equations"/><published>2024-01-12T00:00:00+00:00</published><updated>2024-01-12T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/toro_chap2</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/toro_chap2/"><![CDATA[<h2 id="discretization">Discretization</h2> <p>The continuous domain \([a,b]\times [0,\infty)\) can be replaced into finite number of points \((x_i, t_n)\) as follows:</p> <p>Space discretization: spatial domain \([a, b]\) into \(M+2\) equidistant points</p> \[x_{i}=a+i \Delta x, \ i=0,...,M+1, \ \Delta x=\frac{b-a}{M-1}\] <ul> <li>There are \(M\) interior points \((x_1, x_2, ..., x_M)\).</li> <li>Two boundary points exist \((x_0=a, x_{M+1}=b)\).</li> <li>\(\Delta x\) present mesh size.</li> </ul> <p>Time discretization: temporal domain \([0, T_{out}]\) into a set of time points,</p> \[t_n = n\Delta t, \ n=0,...,N_{out},...\] <ul> <li>\(t_{0}=0\) is initial time.</li> <li>\(T_{out}=\Delta tN_{out}\), where \(\Delta t\) is time step.</li> </ul> <p>In the relation \(c = \lambda\frac{\Delta t}{\Delta x}\), if \(c\) and \(\lambda\) are constants, it implies a fixed relationship between \(\Delta t\) and \(\Delta x\) as follows:</p> \[\Delta x = \Delta t \times K, \ K&gt;0 \ (\text{constant})\] <p>Using these points, the continuous function \(q(x,t)\) can be replaced by a finite number of discrete values \(q(x_i, t_n)\). Subsequently, with these discrete values, the partial differential equation (PDE) can be solved approximately. This method is known as <strong>finite difference approximations</strong>, where the <em><u>differential operator</u></em> is replaced by a <em><u>numerical operator</u></em>.</p> <h2 id="approximation-of-derivatives">Approximation of Derivatives</h2> <p>For a smooth function \(g(z)\), all the derivatives \(g^{(k)}(z_0)\) at \(z_0\) can be obtained using Taylor’s theorem as follows:</p> \[g(z_0+\Delta z)=g(z_0)+\Delta zg'(z_0)+\frac{1}{2}\Delta z^2g^{(2)}(z_0)+O(\Delta z^3)\] \[g(z_0+\Delta z)-g(z_0)=\Delta zg'(z_0)+\frac{1}{2}\Delta z^2g^{(2)}(z_0)+O(\Delta z^3)\] \[g'(z_0)=\frac{g(z_0+\Delta z) - g(z_0)}{\Delta z}+O(\Delta z)\] \[g'(z_0)\approx \frac{g(z_0+\Delta z) - g(z_0)}{\Delta z}\] <p>This is a <strong>first-order forward approximation</strong>. For <strong>first-oder backward approximation</strong>,</p> \[g(z_0-\Delta z)=g(z_0)-\Delta zg'(z_0)+\frac{1}{2}\Delta z^2g^{(2)}(z_0)+O(\Delta z^3)\] \[g'(z_0)=\frac{g(z_0) - g(z_0-\Delta z)}{\Delta z}+O(\Delta z).\] <p>For <strong>second-order central approximation</strong>,</p> \[g'(z_0)=\frac{g(z_0+\Delta z) - g(z_0-\Delta z)}{2\Delta z}+O(\Delta z^2).\] <h2 id="finite-difference-method-fdm">Finite Difference Method (FDM)</h2> <p>Finite difference method approximates the exact value \(q(x_i, t_n)\) at the mesh point \((x_i, t_n)\) with an approximated value \(q_i^n\) as follows:</p> \[q_i^n\approx q(x_i, t_n)\] <p>Using forward approximation, the temporal and spatial derivatives in the PDE can be obtained by</p> \[\frac{\partial q(x_i, t_n)}{\partial t}=\frac{q(x_i, t_{n+1})-q(x_i, t_n)}{\Delta t}+O(\Delta t),\] \[\frac{\partial q(x_i, t_n)}{\partial x}=\frac{q(x_{i+1}, t_{n}) - q(x_i, t_n)}{\Delta x}+O(\Delta x).\] <h3 id="various-methods">Various Methods</h3> <h4 id="godunovs-method">Godunov’s Method</h4> <p>For Godunov’s method, time derivatives is given by</p> \[\frac{\partial q(x_i, t_n)}{\partial t}=\frac{q(x_i, t_{n+1})-q(x_i, t_n)}{\Delta t}+O(\Delta t).\] <p>However, space derivatives depend on the characteristic speed as follows:</p> \[\frac{\partial q(x_i, t_n)}{\partial x}=\frac{q(x_{i}, t_{n}) - q(x_{i-1}, t_n)}{\Delta x}+O(\Delta x),\quad \text{if}\quad \lambda&gt;0.\] \[\frac{\partial q(x_i, t_n)}{\partial x}=\frac{q(x_{i+1}, t_{n}) - q(x_i, t_n)}{\Delta x}+O(\Delta x),\quad \text{if}\quad \lambda&lt;0.\] <p>These derivatives (e.g., \(\lambda &gt; 0\)) are substituted into the differential operator in PDE as follows:</p> \[L_e(q)\equiv\frac{\partial q(x,t)}{\partial t}+\lambda\frac{\partial q(x,t)}{\partial x}=0\] \[L_e(q(x_i,t_n)) = \frac{\partial q(x_i,t_n)}{\partial t}+\lambda\frac{\partial q(x_i,t_n)}{\partial x}\] \[\begin{aligned} L_e\left(q\left(x_i, t_n\right)\right) &amp; =\partial_t q\left(x_i, t_n\right)+\lambda \partial_x q\left(x_i, t_n\right) \\ &amp; =\frac{q\left(x_i, t_{n+1}\right)-q\left(x_i, t_n\right)}{\Delta t}+O(\Delta t) \\ &amp; =\lambda \frac{q\left(x_i, t_n\right)-q\left(x_{i-1}, t_n\right)}{\Delta x}+O(\Delta x) \\ &amp; =0 \end{aligned}\] <p>Here, the exact solution, \(q(x_i, t_n)\) is replaced by the approximated value, \(q_i^n\), suppressing terms of \(O(\Delta t) + O(\Delta x)\), as follows:</p> \[\frac{q_i^{n+1}-q_i^n}{\Delta t}+\lambda\left(\frac{q_i^n-q_{i-1}^n}{\Delta x}\right)=0\] <p>This consists of a numerical operator instead of a differential operator and can be rewritten by</p> \[q_i^{n+1}=q_i^{n}-c\left(q_i^n-q_{i-1}^n\right)\] <p>where \(c=\frac{\lambda \Delta t}{\Delta x}\) means CFL number. The equation states that the Godunov scheme is always upwind.</p> <h4 id="ftcs-method">FTCS method</h4> <p>FTCS method means Forward-in-Time Centred-in-Space.</p> \[\frac{\partial q(x_i, t_n)}{\partial t}=\frac{q(x_i, t_{n+1})-q(x_i, t_n)}{\Delta t}+O(\Delta t).\] \[\frac{\partial q(x_i, t_n)}{\partial x}=\frac{q(x_{i+1}, t_{n})-q(x_{i-1}, t_n)}{2\Delta t}+O(\Delta x^2).\] <p>The exact solution, \(q(x_i, t_n)\) is replaced by the approximated value, \(q_i^n\), suppressing terms of \(O(\Delta t) + O(\Delta x^2)\), as follows:</p> \[\frac{q_i^{n+1}-q_i^n}{\Delta t}+\lambda\left(\frac{q_{i+1}^n-q_{i-1}^n}{2\Delta x}\right)=0\] \[q_i^{n+1}=q_i^{n}-\frac{1}{2}c\left(q_{i+1}^n-q_{i-1}^n\right)\] <p>FTCS seems better than Godunov’s method due to its second-order accuracy in space; however, unfortunately, since FTCS is unconditionally unstable, it is useless. To rescue this, there are serveral approaches as follows:</p> <h4 id="explicit-lax-friedrichs-lf-scheme">Explicit Lax-Friedrichs (LF) Scheme</h4> <p>LF method replaces \(q_i^n\) with half of the neighboring values \(q_{i-1}^n\) and \(q_{i+1}^n\). Thus, FTCS method can be written as</p> \[\frac{q_i^{n+1}-\frac{1}{2}(q_{i+1}^n+q_{i-1}^n)}{\Delta t}+\lambda\left(\frac{q_{i+1}^n-q_{i-1}^n}{2\Delta x}\right)=0\] \[q_i^{n+1}=\frac{1}{2}\left(1+c\right)q_{i-1}^n+\frac{1}{2}\left(1-c\right)q_{i+1}^n\] <p>For example, if the CFL number is positive (i.e., the characteristic speed is positive), the first term on the right side of the equation have a greater impact on the solution than the second term. Conversely, if the CFL number is negative, the second term has a more pronounced effect on the solution.</p> <h4 id="lax-wendroff-lw-scheme">Lax-Wendroff (LW) Scheme</h4> <p>LW method employs Cauchy-Kowalewskaya procedure, which replaces time derivatives with space derivatives as follow:</p> \[\frac{\partial q}{\partial t}=-\lambda\frac{\partial q}{\partial x},\qquad \frac{\partial^2 q}{\partial t^2}=\lambda^2\frac{\partial^2 q}{\partial x^2},\qquad \frac{\partial^{(k)} q}{\partial t^{(k)}}=\left(-\lambda^{k}\right)\frac{\partial^{(k)} q}{\partial x^{(k)}}\] <p>Using these, a Taylor series in time can be written as</p> \[q(x_i,t_{n+1})=q(x_i,t_{n})-\Delta t\lambda\partial_x q(x_i,t_{n})+\frac{1}{2}\Delta^2\lambda^2\partial^2_xq(x_i,t_{n})+O(\Delta t^3)\] \[\partial_x q(x_i,t_{n})=\frac{q(x_{i+1},t_n)-q(x_{i-1},t_n)}{2\Delta x}+O(\Delta x^2)\] \[\partial_x^2 q(x_i,t_{n})=\frac{q(x_{i+1},t_n)-2q(x_{i},t_n)+q(x_{i-1},t_n)}{\Delta x^2}+O(\Delta x^2)\] \[q^{n+1}_i=\frac{1}{2}c(1+c)q^{n}_{i-1}+(1-c^2)q^{n}_{i}-\frac{1}{2}c(1-c)q^{n}_{i+1}\] <p>This equation is second-order accuracy and stable in \(\left\vert c \right\vert\le1\)</p> <h3 id="implicit-time-discretization">Implicit Time Discretization</h3> <p>Implicit form can be obtained following manner:</p> \[\partial_xq(x_i, t_n)=\frac{q(x_{i+1}, t_{n+1})-q(x_{i-1}, t_{n+1})}{2\Delta x}+O(\Delta x^2)\] \[\frac{q^{n+1}_i-q^{n}_i}{\Delta t}+\lambda\left(\frac{q^{n+1}_{i+1}-q^{n+1}_{i-1}}{2\Delta x}\right)=0\] \[q^{n+1}_{i}=q^n_i-\frac{1}{2}c\left(q^{n+1}_{i+1}-q^{n+1}_{i-1}\right)\] \[-\frac{1}{2}cq^{n+1}_{i-1}+q^{n+1}_{i}+\frac{1}{2}cq^{n+1}_{i+1}=q^n_i\] <p>From this, the linear algebraic system can be obtained as</p> \[\bf{A}\bf{X}=\bf{B}\] <p>where</p> \[\bf{A}=\left[\begin{array}{lll} -\frac{1}{2} c &amp; 1 &amp; \frac{1}{2} c \end{array}\right],\qquad \bf{X}=\left[\begin{array}{lll} q^{n+1}_{i-1} &amp; q^{n+1}_{i} &amp; q^{n+1}_{i+1} \end{array}\right]^{\text{T}},\qquad \bf{B}=q^{n}_{i}\] <h2 id="conservation-form">Conservation Form</h2> <p>The general scalar conservation law (=balance law) is given by</p> \[\frac{\partial q}{\partial t}+\frac{\partial f(q)}{\partial x}=0\] <p>where \(f(q)\) is the physical flux. This can be rewritten by</p> \[q^{n+1}_i=q^n_i-\frac{\Delta t}{\Delta x}\left(f_{i+\frac{1}{2}}-f_{i-\frac{1}{2}}\right)\] <p>where \(f_{i+\frac{1}{2}}=f_{i+\frac{1}{2}}\left(q^n_{i-l},...,q^n_{i},q^n_{i+1},...,q^n_{i+r}\right)\) represents the numerical flux, requiring to satisfy</p> <ul> <li>Continuity: \(f_{i+\frac{1}{2}} \left(\mathbb{R}^{l+r}\rightarrow\mathbb{R}\right)\) is a continuous real-value function</li> <li>Consistency: when all arguments of numerical flux are identical, numerical flux become a physical flux, \(f_{i+\frac{1}{2}}(\hat{q},...,\hat{q})=f(\hat{q})\).</li> </ul> <h4 id="lax-wendroff-lw-scheme-1">Lax-Wendroff (LW) Scheme</h4> \[q^\text{LW}_{i+\frac{1}{2}}=\frac{1}{2}(q^n_i+q^n_{i+1})-\frac{1}{2}\frac{\Delta t}{\Delta x}\left[f(q_{i+1}^n)-f(q_{i}^n)\right]\] \[f^\text{LW}_{i+\frac{1}{2}}=f(q^\text{LW}_{i+\frac{1}{2}})\] <h4 id="godunov-centred-gc-scheme">Godunov Centred (GC) Scheme</h4> \[q^\text{GC}_{i+\frac{1}{2}}=\frac{1}{2}(q^n_i+q^n_{i+1})-\frac{\Delta t}{\Delta x}\left[f(q_{i+1}^n)-f(q_{i}^n)\right]\] \[f^\text{GC}_{i+\frac{1}{2}}=f(q^\text{GC}_{i+\frac{1}{2}})\] <h4 id="lax-friedrichs-lf-scheme">Lax-Friedrichs (LF) Scheme</h4> \[f^\text{LF}_{i+\frac{1}{2}}=\frac{1}{2}\left[f(q^n_i)+f(q^n_{i+1})\right]-\frac{1}{2}\frac{\Delta x}{\Delta t}(q_{i+1}^n-q_{i}^n)\] <h4 id="force-scheme">FORCE Scheme</h4> \[f^\text{FORCE}_{i+\frac{1}{2}}=\frac{1}{2}\left[f^\text{LF}_{i+\frac{1}{2}}+f^\text{LW}_{i+\frac{1}{2}}\right]\] <h2 id="time-step-delta-t">Time Step, \(\Delta t\)</h2> <p>The choice of \(\Delta t\) for explicit methods is constraint by a stability condition (i.e., CFL condition).</p> <p>From definition of CFL number,</p> \[C_{cfl}=\lambda \frac{\Delta t}{\Delta x}\] \[\Delta t=C_\text{cfl}\frac{\Delta x}{\lambda}\] <p>where \(\lambda\) have to be the largest wave speed present at time level \(n\) \(\left(\lambda = S^n_\text{max}\right)\) and CFL coefficient \((C_\text{cfl})\) is limited as follows:</p> \[0&lt;C_\text{cfl}\le C_\text{lim}.\] <p>Here, \(C_\text{lim}\) is linearized stability limit of the scheme. Practically, CFL coefficient is given by</p> \[C_\text{cfl}=0.9\times C_\text{lim}.\]]]></content><author><name></name></author><category term="CFD"/><category term="numerical_method"/><summary type="html"><![CDATA[This is based on the Computational Modeling for Fluid Dynamics course, which I took at SNU during the summer semester of 2021, by Prof. E.F. Toro.]]></summary></entry><entry><title type="html">Introduction of Two-Phase Flow</title><link href="https://seonghak35.github.io/blog/2024/two_phase_intro_kor/" rel="alternate" type="text/html" title="Introduction of Two-Phase Flow"/><published>2024-01-11T00:00:00+00:00</published><updated>2024-01-11T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/two_phase_intro_kor</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/two_phase_intro_kor/"><![CDATA[<h2 id="multiphase-flow">Multiphase Flow</h2> <p>다상유동 (multiphase)은 기체, 액체 및 고체상들이 혼합되어 있는 유동을 의미한다. 다상유동은 점도, 밀도 등 물성치가 다른 2개 이상의 유체가 혼합되어 있기 때문에 각 상간의 상호작용으로 인해 단상유동과는 다른 유동현상이 나타난다.</p> <h3 id="two-phase-flow">Two-Phase Flow</h3> <p>고체 혼합물과는 달리 (고체 형상이 녹거나 어는 경우를 제외하고), 기체-액체 2상 유동 (gas-liquid two-phase flow)에서는 상 경계면이 지속적으로 변하고, 각 상 내부의 유동이 존재하기 때문에 복잡하다. 또한 이러한 기체-액체 2상 유동은 상변화 열전달 (phase change heat transfer)현상과 연관되어 있다.</p> <p>비록 엄밀하게는, 2상 유동은 수증기-물과 같이 동일한 화학적 성분을 가진 물질이 서로 다른 상으로 공존하는 유동을 의미하고, 공기-물과 같이 2개의 서로 다른 화학성분으로 구성된 유동은 2성분 유동 (two component flow)이지만, 두 유동은 제반현상뿐만 아니라, 해석 및 실험 방법면에서도 많은 유사성이 있기 때문에 모두 2상유동이라고 칭하고 있다.</p> <p>2상유동의 연구방법은 다음과 같이 정리될 수 있다.</p> <ul> <li>실험을 통하여 correlation을 얻는 방법 <ul> <li>대형장치내의 2상 유동을 실험실 규모의 장치에서 예측할 수 있도록 모사하는 scaling law가 필요</li> </ul> </li> <li>Differential analysis <ul> <li>미소체적에 대한 balance equation으로부터 conservation equation을 얻고, 이를 풀어서 각 상의 속도, 온도, 농도 분포등을 예측</li> <li>보존방정식을 푸는 데 필수적인 constitutive relations (e.g., 각 상의 상호작용에 의한 난류현상의 변화를 고려한 각 상의 난류 모델, 상 경계면 형상 및 면적의 변화에 대한 모델) 필요</li> </ul> </li> <li>Integral analysis <ul> <li>속도, 온도에 대해 적절한 분포함수 형태를 가정하고, 관심있는 유동영역에서 전반적인 보존관계를 만족시킬 수 있는 분포함수의 변수를 결정</li> <li>적당한 분포함수의 가정을 위해서는 유동의 물리적 현상 파악이 필요</li> </ul> </li> <li>Flow pattern에 관계없이 간단한 거시적 모델을 세워 유동을 기술하는 방법 (e.g., homogeneous mixture model)</li> </ul> <h2 id="basic-flow-patterns">Basic Flow Patterns</h2> <p>2상 유동은 다양한 flow pattern을 지니고 있다 (e.g., 액체 내의 기포, 기체 내에 액적, 그리고 상부의 기체와 하부의 액체가 흐르는 유동). 열전달이나 물질전달 (condensation과 evaporation)의 정도는 flow pattern에 따라 크게 좌우된다.</p> <p>기체와 액체는 밀도차가 크기 때문에 기체는 부력을 받아 중력과 반대 방향으로 항상 떠오른다. 따라서, 유동방향이 수직 또는 수평에 따라 flow pattern도 변한다.</p> <h3 id="vertical-flows">Vertical Flows</h3> <p>Vertical flow의 경우, 중력이 유동 방향과 같거나 정반대이므로 유동의 형태가 축대칭이다. Vertical flow pattern은 bubbly flow, slug flow, churn flow, annular flow, and drop flow 등이 있다. 각 flow pattern의 경계가 명확히 구분되지는 않고, 천이할 때는 2개의 pattern이 섞여서 나타난다.</p> <h4 id="bubbly-flow">Bubbly flow</h4> <p>liquid phase 내에 gas phase가 분산된 작은 기포의 축대칭 형태로 분포한다. 기포의 직경은 관 직경에 비해 매우 작기 때문에 관 벽면으로부터 직접적인 영향을 받지 않고, 간접적으로 영향을 받는다 (i.e., 관 벽에 접촉하고 있는 liquid phase에 의해 기포의 유동이 영향을 받는다). void fraction (단위 체적당 기체가 차지하는 체적의 비)가 0.3 이하에서 주로 나타난다.</p> <h4 id="slug-flow">Slug flow</h4> <p>관 직경과 거의 같은 직경을 가지는 Taylor bubble이 상향으로 흐르고, Taylor bubble과 벽면 사이에서는 액체가 얇은 film의 형태로 하향 유동을 한다. bubbly flow가 하류로 흘러가면서 작은 기포들 간의 합착에 의해서 형성된다.</p> <h4 id="churn-flow">Churn flow</h4> <p>앞부분이 둥근 형태의 slug flow와는 달리 기포의 형태가 많이 변형되어 불규칙적인 형태를 이루며, liquid slug가 기체 유동에 의해 파괴되었다가 복원됨에 따라 유동 전체가 oscillation을 한다. 이에 따라.</p> <h4 id="annular-flow">Annular flow</h4> <p>liquid는 벽을 따라 film의 형태로 흐르고, gas는 중심부를 따라 흐른다. 기체의 흐름이 클 때 일반적으로 나타나며, liquid film으로 부터 작은 liquid drop이 떨어져 나와 기체 유동에 entrainment되는 경우가 많다 (annular-mist flow).</p> <h4 id="drop-flow">Drop flow</h4> <p>liquid가 drop의 상태로 기체유동에 실려서 흘러가는 유동으로, 액체유량에 비해 기체유량이 매우 클때 나타나며 dispersed flow, mist flow, 또는 spray flow로도 언급된다.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset=" /assets/img/flow_pattern_vertical-480.webp 480w, /assets/img/flow_pattern_vertical-800.webp 800w, /assets/img/flow_pattern_vertical-1400.webp 1400w, " sizes="95vw" type="image/webp"/> <img src="/assets/img/flow_pattern_vertical.jpg" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Flow patterns for two-phase in a vetical flows <br/> (taken from Handbook of fluids in motion by Cheremisinoff, N. P., &amp; Gupta, R.) </div> <p>heat transfer가 수반되지 않는 유동 (엄밀하게, two-component flow)의 경우는 flow pattern이 그대로 유지되지만, heat transfer가 수반 되는 evaporative flow나 condensing flow의 경우에는 유동방향에 따라 flow pattern이 크게 변하게 된다.</p> <h3 id="horizontal-flows">Horizontal Flows</h3> <p>Horizontal flow의 경우, 중력이 반경 방향으로 작용하므로 유동이 중심축에 대해 비대칭 형태를 가지며, 밀도가 큰 액체는 아래쪽에서 흐르는 경향을 보인다. Horizontal flow pattern은 bubbly flow, plug flow (elongated bubbly flow), stratified flow, wavy flow, slug flow, and annular flow 등이 있다.</p> <h4 id="bubbly-flow-1">Bubbly flow</h4> <p>Liquid phase에 작은 기포가 분산된 형태이다. 부력에 의해 기포들은 상부에 더 많이 분포하여 흐른다.</p> <h4 id="plug-flow">Plug flow</h4> <p>Bubbly flow가 느려지면 기포들 간의 합착에 의해 긴 형태의 bubble이 형성되며,상부를 따라서 흐른다.</p> <h4 id="stratified-flow">Stratified flow</h4> <p>기체와 액체가 모두 느린 속도로 흐를때 나타나며, 기체와 액체간 상대 속도가 작기 때문에 두 유체간의 interface는 smooth한 형태를 가진다.</p> <h4 id="wavy-flow">Wavy flow</h4> <p>Stratified flow에서 기체의 속도가 증가하게 되면, 두 유체간의 상대 속도가 커지게 되면서 interface가 교란을 받아 surface wave가 발생하는 유동이다. surface wave는 유동 방향으로 움직인다.</p> <h4 id="slug-flow-1">Slug flow</h4> <p>Plug flow와 외형상 비슷하나, 빠른 속도의 기체의 의해서 발생한다.</p> <h4 id="annular-flow-1">Annular flow</h4> <p>빠른 속도의 기체가 중심 부분을 흐르고, 상대적으로 느린 액체는 벽을 따라서 film의 형태를 가지고 같은 방향으로 흐른다. 중력에 의해 상부는 항상 liquid film으로 덮여있진 않고, 하부에서는 좀 더 두꺼운 liquid film을 형성한다. 속도가 증가하면, liquid film으로부터 liquid drop이 기체 유동에 유입된다 (annular-mist flow).</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset=" /assets/img/flow_pattern_horizontal-480.webp 480w, /assets/img/flow_pattern_horizontal-800.webp 800w, /assets/img/flow_pattern_horizontal-1400.webp 1400w, " sizes="95vw" type="image/webp"/> <img src="/assets/img/flow_pattern_horizontal.jpg" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Flow patterns for two-phase in a horizontal flows <br/> (taken from Handbook of fluids in motion by Cheremisinoff, N. P., &amp; Gupta, R.) </div> <h2 id="notations-and-relations">Notations and Relations</h2> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset=" /assets/img/flow_variables-480.webp 480w, /assets/img/flow_variables-800.webp 800w, /assets/img/flow_variables-1400.webp 1400w, " sizes="95vw" type="image/webp"/> <img src="/assets/img/flow_variables.jpg" width="100%" height="auto" data-zoomable="" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Variables of two-phase flow </div> <p>각 phase의 속도와 유량등 여러 변수들 간의 관계를 정의하기 위해, 위의 그림에서 보는 것처럼, 유동 단면적 \(A\)를 밀도가 \(\rho_{\ell}\)인 액체와 \(\rho_{g}\)인 기체가 각각 속도 \(u_{\ell}\)와 \(u_{g}\)로 함께 흐르는 1차원 유동을 생각할 수 있다. 각 상이 차지하는 유동 단면적을 각각 \(A_{\ell}, A_{g}\)라고 하면 다음과 같이 표현할 수 있다.</p> \[A=A_{\ell}+A_{g}\] <p>여기서, 아래와 같이 기체가 차지하는 체적 \((A_{g}\cdot\Delta z)\)을 전체 체적 \((A\cdot\Delta z)\)으로 나누면 void fraction \((\alpha)\)을 구할 수 있다.</p> \[\alpha = A_{g}/A\] \[1-\alpha = A_{\ell}/A\] <p>기체와 액체의 mass flow rate \((\dot{m})\)은 각각 아래와 같으며,</p> \[\dot{m_g}=u_{g}\rho_{g}A_{g}\] \[\dot{m_\ell}=u_{\ell}\rho_{\ell}A_{\ell}\] <p>Total mass flow rate은 다음과 같다.</p> \[\dot{m}=\dot{m_g}+\dot{m_\ell}\] <p>기체와 액체에 대한 volume flow rate \((\dot{V})\)은 각각 아래와 같으며,</p> \[\dot{V_g}=u_{g}A_{g}=\dot{m_g}/\rho_{g}\] \[\dot{V_\ell}=u_{\ell}A_{\ell}=\dot{m_\ell}/\rho_{\ell}\] <p>Total volume flow rate은 다음과 같다.</p> \[\dot{V}=\dot{V_g}+\dot{V_\ell}\] <p>Total mass flow rate에 대한 기체 mass flow rate의 비를 quality 또는 mass quality \((x)\)라고 부르며, 아래와 같이 표현한다.</p> \[x=\dot{m_g}/\dot{m}\] \[1-x=\dot{m_\ell}/\dot{m}\] <p>단위 면적당 mass flow rate인 mass flux \((J)\)는 아래와 같은 relation을 가진다.</p> \[J_{\ell} = \dot{m_\ell}/A\] \[J_{g} = \dot{m_g}/A\] \[J = \dot{m}/A = J_{\ell} + J_{g}\] <p>단위 면적당 volume flow rate인 superficial velocity \((S)\)는 아래와 같은 relation을 가진다.</p> \[S_\ell=\dot{V_\ell}/A\] \[S_g=\dot{V_g}/A\] \[S = \dot{V}/A =S_\ell + S_g\] <p>total volume flow rate에 대한 기체 volume flow rate의 비를 volume quality \((\beta)\)라고 정의하며, 아래와 같다.</p> \[\beta = \dot{V_g}/\dot{V}\] \[1-\beta = \dot{V_\ell}/\dot{V}\] <p>앞서 정의한 void fraction \((\alpha)\), mass flow rate \((\dot{m})\), mass flux \((J)\), volume flow rate \((\dot{V})\), superficial velocity \((S)\), mass quality \((x)\), volume quality \((\beta)\)와 기체 및 액체의 실제 속도 \((u_g, u_\ell)\)간의 관계식을 정리하면 다음과 같다.</p> \[u_g = \dot{m_g}/\rho_{g}A_g = \dot{V_g}/A_g=Jx/\alpha\rho_g\] \[u_\ell = \dot{m_\ell}/\rho_\ell A_\ell=\dot{V_\ell}/A_\ell=J(1-x)/(1-\alpha)\rho_\ell\] \[S_g=u_g\alpha=S\beta=Jx/\rho_g\] \[S_\ell=u_\ell(1-\alpha)=S(1-\beta)=J(1-x)/\rho_\ell\] \[\frac{u_g}{u_\ell}=\frac{x}{1-x}\frac{\rho_\ell}{\rho_g}\frac{1-\alpha}{\alpha}\] <p>기체와 액체간의 relative velocity는 아래와 같으며,</p> \[u_{g,\ell}=u_g - u_\ell\] \[u_{\ell, g} = u_\ell - u_g\] <p>기체 (또는 액체)속도와 superficial velocity와의 relative velocity인 drift velocity는 다음과 같다.</p> \[u_{g, \text{s}}=u_g - S\] \[u_{\ell, \text{s}}=u_\ell - S\] <p>drift flux (평균 속도에 대한 각 phase의 superficial velocity)는 아래와 같은 relation을 가진다.</p> \[S_{g, \ell}=\alpha(u_g - S)=\alpha u_{g,s}\] \[S_{\ell, g}=(1-\alpha)(u_\ell-S)=(1-\alpha)u_{\ell,s}\] \[S_{g, \ell} = -S_{\ell, g}\] \[S_{g, \ell} = (1-\alpha)S_g - \alpha S_\ell\] \[S_{\ell, g} = \alpha S_\ell - (1-\alpha)S_g\] \[S_{g,\ell} = \alpha(1-\alpha)u_{g, \ell}\] <h2 id="flow-patterns-maps">Flow Patterns Maps</h2> <p>Flow patterns maps을 통해 다양한 flow pattern를 2차원 상에서 표현할 수 있지만, flow pattern 변화는 많은 변수들에 의존하기 때문에 2차원 상에서 모든 flow pattern을 완전히 표현할 수는 없다. 따라서 각 maps을 상황에 맞게 적용해야 한다.</p> <h3 id="vertical-flows-1">Vertical Flows</h3> <h4 id="vertical-co-current-upward-flow">Vertical co-current upward flow</h4> <ul> <li><a href="https://www.osti.gov/biblio/4798091">Hewitt &amp; Roberts</a></li> <li><a href="https://www.osti.gov/biblio/7255422">Taitel &amp; Dukler</a></li> </ul> <h4 id="vertical-co-current-downward-flow">Vertical co-current downward flow</h4> <ul> <li><a href="https://onlinelibrary.wiley.com/doi/abs/10.1002/cjce.5450520105">Oshinowo &amp; Charles</a></li> <li><a href="https://www.sciencedirect.com/science/article/pii/0301932285900230">Crawford et al.</a></li> </ul> <h3 id="horizontal-flows-1">Horizontal Flows</h3> <ul> <li><a href="https://www.proquest.com/docview/302204145?pq-origsite=gscholar&amp;fromopenview=true&amp;sourcetype=Dissertations%20&amp;%20Theses">Baker</a></li> <li><a href="https://www.sciencedirect.com/science/article/pii/0301932274900068">Mandhane et al.</a></li> <li><a href="https://aiche.onlinelibrary.wiley.com/doi/abs/10.1002/aic.690220105">Taitel &amp; Dukler</a></li> </ul>]]></content><author><name></name></author><category term="CFD"/><category term="multiphase_flow"/><summary type="html"><![CDATA[This is based on the Two-phase flow heat transfer book.]]></summary></entry><entry><title type="html">Linear Advection Equation (LAE)</title><link href="https://seonghak35.github.io/blog/2024/toro_chap1/" rel="alternate" type="text/html" title="Linear Advection Equation (LAE)"/><published>2024-01-10T00:00:00+00:00</published><updated>2024-01-10T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2024/toro_chap1</id><content type="html" xml:base="https://seonghak35.github.io/blog/2024/toro_chap1/"><![CDATA[<h2 id="partial-differential-equations-pdes">Partial Differential Equations (PDEs)</h2> <p>Many physical phenomena around us are governed by <em>advection-diffusion-reaction partial differential equations</em>.</p> <p>In the scalar case (single equation), it can be written as follows:</p> \[\frac{\partial q}{\partial t}+\frac{\partial f(q)}{\partial x}=s(x, t, q)+\frac{\partial}{\partial x}\left(\alpha \frac{\partial q}{\partial x}\right)\] <ul> <li>\(q=q(x, t)\) is the <em>unknown</em> <u>dependent variable</u> and a function of two <u>independent variables</u> \(x\) and \(t\).</li> <li>\(f(q)\) is the <em>flux</em>.</li> <li>\(s(x,t,q)\) is the <em>source term</em></li> <li>\(\frac{\partial}{\partial x}\left(\alpha \frac{\partial q}{\partial x}\right)\) is the <em>diffusion term</em>, which is second-order differential operator.</li> <li>\(\alpha=\alpha(x,t,q)\) is the <em>diffusion coefficient</em>.</li> </ul> <h3 id="linear-equation">Linear Equation</h3> <p>The <u>linear</u> advection-diffusion-reaction partial differential equation, obtained by setting the flux function as linear function of \(q\), \(f(q)=\lambda q\), and the source function as linear function of \(q\), \(s(q)=\beta q\), can be written as follows:</p> <p>\begin{equation} \frac{\partial q}{\partial t}+\lambda \frac{\partial q}{\partial x}=\beta q+\alpha \frac{\partial^2 q}{\partial x} \label{eq:le} \end{equation}</p> <p>with \(\lambda\), \(\beta\), and \(\alpha\) of constants.</p> <p>Assuming that there is no advection, \(\partial_x q=0\), and no diffusion, \(\alpha=0\), Eq. \eqref{eq:le} becomes an ordinary differential equation (ODE) as follows:</p> \[\frac{d q}{d t}=\beta q(x,t) \equiv s(t,q)\] <h2 id="initial-value-problem-ivp">Initial Value Problem (IVP)</h2> <p>By setting source coefficient and diffusion coefficient as zero, the linear advection equation (LAE) can be written as follows:</p> <p>\begin{equation} \frac{\partial q}{\partial t}+\lambda \frac{\partial q}{\partial x}=0 \label{eq:lae} \end{equation}</p> <p>with characteristic speed \((\lambda)\).</p> <p>Because of initial value problem, the spatial domain is infinite \((-\infty&lt; 0&lt; \infty)\), i.e., no spatial boundaries, and time \((t&gt;0)\) is positive. An initial condition at time \((t=0)\) is provided as follows:</p> \[q(x,0)=h(x)\] <h2 id="characteristic-curves">Characteristic Curves</h2> <p>Eq. \eqref{eq:lae} can be expressed by <u>characteristic curves</u>, which is function, \(x(t)\), defined in the \(x\)-\(t\) half-plane of independent variables \((x, t)\) as follows:</p> \[\frac{d x(t)}{d t}=\lambda\] <p>satisfying the IVP \(x(0)=x_0\). This solution can be easily obtained as follows:</p> \[x(t)=x_0+\lambda t\] <p>where \(x_0\) is <u>foot of the characteristic</u> and the characteristic speed \((\lambda)\) determines the slope of the characteristics. Therefore, in case of linear case with constant \(\lambda\), characteristics are all parallel to each other.</p> <p>In order to obtain the solution \((q)\) of original PDE equation, Eq. \eqref{eq:lae}, consider that the time-rate of change of \(q\) along a characteristic curve \(x=x(t)\) as follows:</p> \[\frac{dq}{dt}=\frac{\partial q}{\partial t}\frac{d t}{d x}+\frac{\partial q}{\partial x}\frac{d x}{d t}=\partial_{t}q+\lambda \partial_{x}q=0\] <p>As a result, the linear advection equation \(\partial_{t}q+\lambda \partial_{x}q=0\) (PDE) becomes the ODE \(d_{t}q=0\) along the characteristics, \(x=x_{0}+\lambda t\). This states that \(q\) is constant along the characteristics \(x=x_{0}+\lambda t\). In other words, the value of \(q(x,t)\) at arbitrary point \((x,t)\) is equal to the value of \(q\) at the foot \(x_0\) as follows:</p> <p>\begin{equation} q(x,t)=q(x_0,t)=h(x_0)=h(x-\lambda t) \label{eq:charac} \end{equation}</p> <h3 id="proof">Proof</h3> <p>To see that the function \(q(x,t)\) in Eq. \eqref{eq:charac} is the exact solution of the original IVP, Eq. \eqref{eq:lae}, assume that the initial condition \(h(x)\) is differentiable (i.e. <u>smooth function</u>).</p> \[\frac{\partial q}{\partial t}=\frac{\partial h}{\partial (x-\lambda t)}\times \frac{\partial (x-\lambda t)}{\partial t} \equiv h'\times(-\lambda)\] \[\frac{\partial q}{\partial x}=\frac{\partial h}{\partial (x-\lambda t)}\times \frac{\partial (x-\lambda t)}{\partial x} \equiv h'\times(\lambda)\] <p>Substituting these partial derivatives into the original PDE,</p> \[\frac{\partial q}{\partial t}+\lambda \frac{\partial q}{\partial x}=-\lambda h'+\lambda h'=0.\] <p>Therefore, the function \(q(x,t)=h(x-\lambda t)\) is the solution of the original PDE.</p> <h2 id="riemann-problem">Riemann Problem</h2> <p>The Riemann problem for the linear advection equation is the special IVP including the <u>discontinuity</u> solution as follows:</p> \[\frac{\partial q}{\partial t}+\lambda \frac{\partial q}{\partial x}=0\] <p>with initial condition</p> \[q(x,0)=h(x) = \begin{cases}q_L &amp; \text { if } x&lt;0 \\ q_R &amp; \text { if } x&gt;0\end{cases}\] <p>At the point \(x=0\), the solution is not defined, i.e., <u>singularity</u>.</p> <p>The solution is as follows:</p> \[q(x,t)=h(x-\lambda t) = \begin{cases}q_L &amp; \text { if } x-\lambda t&lt;0 \\ q_R &amp; \text { if } x-\lambda t&gt;0\end{cases}\] <h2 id="initial-boundary-value-problem-ibvp">Initial-Boundary Value Problem (IBVP)</h2> <p>In most practical problem, the boundaries are present and then have to be defined in a finite spatial domain \(x\in[a,b]\) as follows:</p> \[q= \begin{cases} q(a,t)=b_{L}(t) \\ q(b,t)=b_{R}(t) \end{cases}\] <p>In addition to IC, the boundary conditions are need for computation.</p> <p>For \(\lambda &gt;0\), the solution in domain \(x\in[a,b]\) depends on the IC and the left BC because the values at left BC are constantly propagated to the right as follows:</p> \[q(x,t)=\begin{cases} h(x-\lambda t) &amp; \text{ if } x-\lambda t &gt;a \\ b_L(t+\frac{a-x}{\lambda}) &amp; \text{ if } x-\lambda t &lt;a \end{cases}\] <h2 id="generalization">Generalization</h2> <h3 id="linear-advection-reaction-equation">Linear Advection-Reaction Equation</h3> <p>In addition ot LAE, the reaction term can be added in equation as follows:</p> \[\frac{\partial q}{\partial t}+\lambda \frac{\partial q}{\partial x}=\beta q.\] <p>The exact solution can be expressed by</p> \[q(x,t)=h(x-\lambda t)\exp(\beta t),\] <p>where \(q\) represents a wave traveling at speed \(\lambda\), attenuated in time by the factor \(\exp(\beta t)\). For stability of the PDE, it is assumed that \(\beta \le 0\). In case of \(\beta &gt;0\), \(q\) would increase unboundedly in time, i.e., unstable.</p> <h3 id="advection-with-variable-coefficient">Advection with Variable Coefficient</h3> <p>In case that the coefficient is not constant, \(\lambda\), but variable, \(\lambda (x,t)\), the equation can be expressed by</p> \[\frac{\partial q}{\partial t}+\lambda (x,t) \frac{\partial q}{\partial x}=0.\] <p>The characteristic speed \(\lambda (x,t)\) is no longer constant but a function of space and time. Thus, the associated characteristics are no longer straight lines and no longer parallel to each other although the solution is constant along the characteristics.</p> <h3 id="linear-advection-reaction-in-3d">Linear Advection-Reaction in 3D</h3> <p>The linear advection-reaction equation in three space dimensions can be expressed by</p> \[\frac{\partial q}{\partial t}+\lambda_1\frac{\partial q}{\partial x}+\lambda_2\frac{\partial q}{\partial y}+\lambda_3\frac{\partial q}{\partial z}=\beta q,\] <p>with initial condition, \(q(x,y,z,0)=h(x,y,z)\), where \(\lambda_1, \lambda_2\), and \(\lambda_3\) denote the characteristic speeds in the \(x, y\), and \(z\) direction, respectively.</p> <p>The exact solution can be expressed by</p> \[q(x,y,z,t)=h(x-\lambda_1 t, y-\lambda_2 t,z-\lambda_3 t)\exp(\beta t).\]]]></content><author><name></name></author><category term="CFD"/><category term="numerical_method"/><summary type="html"><![CDATA[This is based on the Computational Modeling for Fluid Dynamics course, which I took at SNU during the summer semester of 2021, by Prof. E.F. Toro.]]></summary></entry><entry><title type="html">Integral Neural Networks (INN)</title><link href="https://seonghak35.github.io/blog/2023/inn/" rel="alternate" type="text/html" title="Integral Neural Networks (INN)"/><published>2023-09-06T00:00:00+00:00</published><updated>2023-09-06T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2023/inn</id><content type="html" xml:base="https://seonghak35.github.io/blog/2023/inn/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><category term="AI"/><summary type="html"><![CDATA[Review of "Integral Neural Networks" by K. Solodskikh et al., as presented at CVPR 2023]]></summary></entry><entry><title type="html">Cross-Image Relational Knowledge Distillation for Semantic Segmentation (CIRKD)</title><link href="https://seonghak35.github.io/blog/2023/cirkd/" rel="alternate" type="text/html" title="Cross-Image Relational Knowledge Distillation for Semantic Segmentation (CIRKD)"/><published>2023-04-26T00:00:00+00:00</published><updated>2023-04-26T00:00:00+00:00</updated><id>https://seonghak35.github.io/blog/2023/cirkd</id><content type="html" xml:base="https://seonghak35.github.io/blog/2023/cirkd/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><category term="AI"/><category term="model_compression"/><summary type="html"><![CDATA[Review of "Cross-Image Relational Knowledge Distillation for Semantic Segmentation" by C. Yang et al., as presented at CVPR 2022]]></summary></entry></feed>